{"version":3,"sources":["webpack:///./src/components/Message/index.vue?fbcb","webpack:///./src/views/Login/components/login-footer.vue?b51c","webpack:///./src/views/Login/components/login-form.vue?d657","webpack:///./src/views/Login/index.vue?1fb1","webpack:///./src/views/Login/components/login-header.vue?c6f5","webpack:///./src/components/Message/index.vue","webpack:///./src/components/Message/index.vue?0084","webpack:///./src/components/Message/index.js","webpack:///./src/views/Login/index.vue","webpack:///./src/views/Login/components/login-header.vue","webpack:///./src/views/Login/components/login-header.vue?339a","webpack:///./src/views/Login/components/login-footer.vue","webpack:///./src/views/Login/components/login-footer.vue?5853","webpack:///./src/views/Login/components/login-form.vue","webpack:///./node_modules/vee-validate/dist/vee-validate.esm.js","webpack:///./src/utils/vee-validate-schema.js","webpack:///./src/views/Login/components/login-form.vue?d73b","webpack:///./src/views/Login/index.vue?9eb6"],"names":["class","name","visible","style","type","icon","text","props","String","default","setup","warn","color","backgroundColor","borderColor","error","success","__exports__","render","time","vnode","createVNode","XtxMessage","document","body","component","setupState","setTimeout","href","to","validation-schema","rules","ref","errors","placeholder","FormData","account","password","isAgree","as","submit","isCallable","fn","isNullOrUndefined","value","undefined","isObject","obj","Array","isArray","isIndex","Number","toNumber","n","parseFloat","isNaN","RULES","resolveRule","id","FormContextKey","Symbol","FieldContextKey","IS_ABSENT","isLocator","__locatorRef","isHTMLTag","tag","includes","isFileInputNode","attrs","isYupValidator","validate","hasCheckedAttr","isContainerValue","isEmptyContainer","length","Object","keys","isNotNestedPath","path","test","isNativeMultiSelect","el","isNativeSelect","multiple","tagName","isNativeMultiSelectNode","hasTruthyBindingValue","shouldHaveValueBinding","isFormSubmitEvent","evt","isEvent","target","Event","srcElement","isPropPresent","prop","cleanupNonNestedPath","replace","getFromPath","object","fallback","resolvedValue","split","filter","Boolean","reduce","acc","propKey","setInPath","i","unset","key","splice","unsetPath","pathValues","map","_","idx","slice","join","keysOf","record","injectWithSelf","symbol","def","vm","provides","message","resolveNextCheckboxValue","currentValue","checkedValue","uncheckedValue","newVal","indexOf","push","throttle","func","limit","inThrottle","lastResult","args","context","this","apply","debounceAsync","inner","ms","timer","resolves","window","clearTimeout","result","forEach","r","Promise","resolve","normalizeChildren","slotProps","slots","_a","_b","call","getBoundValue","hasValueBinding","_value","normalizeEventValue","input","files","from","options","opt","selected","disabled","selectedOption","find","normalizeRules","defineProperty","writable","enumerable","configurable","_$$isNormalized","prev","curr","params","normalizeParams","buildParams","rule","parsedRule","parseRule","provided","mapValueToLocator","createLocator","RegExp","locator","crossTable","val","extractLocators","DEFAULT_CONFIG","generateMessage","field","bails","validateOnBlur","validateOnChange","validateOnInput","validateOnModelUpdate","currentConfig","assign","getConfig","async","shouldBail","formData","values","_validate","valid","validateFieldWithYup","ctx","form","isValid","_generateFieldError","normalizedContext","rulesKeys","_test","validator","opts","abortEarly","then","catch","err","Error","fillTargetValues","fieldCtx","normalize","param","validateYupSchema","schema","errorObjects","results","messages","validateObjectSchema","paths","validations","_c","fieldResult","names","bailsMap","isAllValid","validationResults","all","set","klona","get","x","k","list","tmp","str","prototype","toString","create","__proto__","Set","add","Map","Date","source","flags","constructor","buffer","getOwnPropertySymbols","getOwnPropertyDescriptor","getOwnPropertyNames","hasOwnProperty","es6","equal","a","b","size","entries","has","ArrayBuffer","isView","valueOf","ID_COUNTER","useFieldState","init","initialValue","setInitialValue","_useFieldValue","modelValue","standalone","errorMessage","setErrors","_useFieldErrors","meta","_useFieldMeta","MAX_SAFE_INTEGER","setState","state","touched","shouldInjectForm","modelRef","resolveInitialValue","initialValues","setFieldInitialValue","stageInitialValue","setFieldValue","pending","validated","dirty","immediate","flush","normalizeErrors","errorBag","setFieldErrorBag","API","sendInspectorState","INSPECTOR_ID","sendInspectorTree","useField","useCheckboxField","_useField","validateOnMount","label","validateOnValueUpdate","normalizeOptions","handleBlur","normalizedRules","rulesValue","extractRuleFromSchema","validateCurrentValue","mode","validateSchema","validateWithStateMutation","validateValidStateOnly","validate$1","handleChange","e","shouldValidate","newValue","setTouched","isTouched","unwatchValue","watchValue","deep","resetField","setValue","handleReset","oldValue","register","unregister","dependencies","rulesVal","deps","dep","depAcc","depName","depValue","oldDeps","defaults","valueProp","fieldName","patchCheckboxApi","checked","checkedVal","handleCheckboxChange","FieldImpl","inheritAttrs","required","Function","modelModifiers","hasModelEvents","validateField","onChangeHandler","emit","handleInput","onInputHandler","fieldProps","resolveValidationTriggers","baseOnBlur","onBlur","baseOnInput","onInput","baseOnChange","onChange","resolveTag","newModelValue","applyModifiers","expose","reset","children","_d","modifiers","number","Field","FORM_COUNTER","useForm","formId","RESET_LOCK","fieldsByPath","isSubmitting","submitCount","fieldArraysLookup","formValues","setErrorBag","useErrorBag","initialErrors","bag","getFirstFieldAtPath","fieldOrGroup","fieldExists","fieldNames","fieldBailsMap","originalInitialValues","setInitialValues","useFormInitialValues","useFormMeta","validationSchema","formCtx","registerField","unregisterField","setValues","setFieldError","setFieldTouched","resetForm","handleSubmit","unsetInitialValue","isFieldGroup","applyFieldMutation","mutation","fields","force","fieldInstance","clonedValue","f","insertFieldAtPath","rawField","fieldPath","fieldAtPath","removeFieldFromPath","findIndex","newPath","oldPath","initialErrorMessage","validation","every","onValidationError","preventDefault","stopPropagation","returnVal","_validateSchema","schemaValue","formResult","debouncedSchemaValidation","fieldsById","currentErrorsPaths","wasValidated","some","submitForm","initialTouched","currentValues","MERGE_STRATEGIES","isDirty","calculateFlags","flat","flag","mergeMethod","providedValues","updateFields","wasTouched","normalizeErrorItem","FormImpl","onSubmit","onInvalidSubmit","handleFormReset","onReset","handleScopedSlotSubmit","onSuccess","formAttrs","novalidate","Form","FIELD_ARRAY_COUNTER","useFieldArray","arrayPath","noOp","noOpApi","remove","swap","insert","update","prepend","entryCounter","initFields","createEntry","updateEntryFlags","fieldsLength","entry","isFirst","isLast","pathName","pathValue","normalizedPathValue","indexA","indexB","newFields","temp","tempEntry","arr","unshift","role","components","router","route","store","fm","dispatch","query","redirectUrl","console","dir","response","data","LoginHeader","LoginFooter","LoginForm"],"mappings":"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","file":"js/chunk-649806f2.49d30d83.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=319c08a0&scoped=true&lang=less\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../node_modules/style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./login-footer.vue?vue&type=style&index=0&id=62518914&scoped=true&lang=less\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../node_modules/style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./login-form.vue?vue&type=style&index=0&id=1c919df5&lang=less&scoped=true\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=20411f40&scoped=true&lang=less\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../node_modules/style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./login-header.vue?vue&type=style&index=0&id=f97c0bbc&scoped=true&lang=less\"","<template>\r\n  <Transition name=\"down\">\r\n    <div class=\"xtx-message\" :style=\"style[type]\" v-if=\"visible\">\r\n      <!-- 上面绑定的是样式 -->\r\n      <i class=\"iconfont\" :class=\"[style[type].icon]\"></i>\r\n      <!-- 不同提示图标会变 -->\r\n      <span class=\"text\">{{ text }}</span>\r\n    </div>\r\n  </Transition>\r\n  <!-- 测试 -->\r\n  <!-- <button @click=\"visible = !visible\">mdc</button> -->\r\n</template>\r\n<script>\r\nimport { ref } from 'vue'\r\nexport default {\r\n  name: 'XtxMessage',\r\n  props: {\r\n    text: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    type: {\r\n      type: String,\r\n      // warn 警告  error 错误  success 成功\r\n      default: 'warn'\r\n    }\r\n  },\r\n  setup () {\r\n    // 定义一个对象，包含三种情况的样式，对象key就是类型字符串\r\n    const style = {\r\n      warn: {\r\n        icon: 'icon-warning',\r\n        color: '#E6A23C',\r\n        backgroundColor: 'rgb(253, 246, 236)',\r\n        borderColor: 'rgb(250, 236, 216)'\r\n      },\r\n      error: {\r\n        icon: 'icon-shanchu',\r\n        color: '#F56C6C',\r\n        backgroundColor: 'rgb(254, 240, 240)',\r\n        borderColor: 'rgb(253, 226, 226)'\r\n      },\r\n      success: {\r\n        icon: 'icon-queren2',\r\n        color: '#67C23A',\r\n        backgroundColor: 'rgb(240, 249, 235)',\r\n        borderColor: 'rgb(225, 243, 216)'\r\n      }\r\n    }\r\n\r\n    // 默认隐藏\r\n    const visible = ref(false)\r\n    // onMounted(() => {\r\n    //   visible.value = true\r\n    // })\r\n\r\n    return { style, visible }\r\n  }\r\n}\r\n</script>\r\n<style scoped lang=\"less\">\r\n.xtx-message {\r\n  // width: 300px;\r\n  height: 50px;\r\n  position: fixed;\r\n  z-index: 9999;\r\n  left: 50%;\r\n  margin-left: -150px;\r\n  top: 25px;\r\n  line-height: 50px;\r\n  padding: 0 25px;\r\n  border: 1px solid #e4e4e4;\r\n  background: #f5f5f5;\r\n  color: #999;\r\n  border-radius: 4px;\r\n  i {\r\n    margin-right: 4px;\r\n    vertical-align: middle;\r\n  }\r\n  .text {\r\n    vertical-align: middle;\r\n  }\r\n}\r\n.down {\r\n  // 进入\r\n  &-enter {\r\n    // 进入前 往上移动75px 并且透明度为零\r\n    &-from {\r\n      transform: translate3d(0, -75px, 0);\r\n      opacity: 0;\r\n    }\r\n    // 进入中 对所有的可以支持过滤效果的样式都应用过渡效果 整个过渡时长是0.5s\r\n    &-active {\r\n      transition: all 0.5s;\r\n    }\r\n    // 进入后\r\n    &-to {\r\n      transform: none;\r\n      opacity: 1;\r\n    }\r\n  }\r\n  // 离开\r\n  &-leave {\r\n    // 离开前\r\n    &-from {\r\n      transform: none;\r\n      opacity: 1;\r\n    }\r\n    // 离开中\r\n    &-active {\r\n      transition: all 0.5s;\r\n    }\r\n    // 离开后\r\n    &-to {\r\n      transform: translate3d(0, -75px, 0);\r\n      opacity: 0;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./index.vue?vue&type=template&id=319c08a0&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=319c08a0&scoped=true&lang=less\"\n\nimport exportComponent from \"F:\\\\ithiema\\\\黑马学习\\\\就业班\\\\07rabbit_test\\\\rabbitv0.0.1\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-319c08a0\"]])\n\nexport default __exports__","// 实现使用函数调用xtx-message组件的逻辑\r\nimport { createVNode, render } from 'vue'\r\nimport XtxMessage from './index.vue'\r\n\r\n// 2. 导出使用方法\r\nexport default ({ type, text, time = 2000 }) => {\r\n  // if (vnode) return\r\n  // 1. 准备dom容器\r\n  // const div = document.createElement('div')\r\n  // document.body.appendChild(div)\r\n  // 定时器标识\r\n  // let timer = null\r\n  // 实现：根据xtx-message.vue渲染消息提示\r\n  // 1. 导入组件\r\n  // 2. 根据组件创建虚拟节点\r\n  const vnode = createVNode(XtxMessage, { type, text })\r\n  // 3. 准备一个DOM容器\r\n  // 4. 把虚拟节点渲染DOM容器中\r\n  render(vnode, document.body)\r\n  // 5. 开启定时，移出DOM容器内容\r\n  // timer && clearTimeout(timer)\r\n  // timer =\r\n  vnode.component.setupState.visible = true\r\n  setTimeout(() => {\r\n    // console.log(vnode, vnode.component.setupState)\r\n    // 触发关闭动画\r\n    // vnode.el.click()\r\n    vnode.component.setupState.visible = false\r\n    // 移除元素\r\n    // setTimeout(() => {\r\n    //   document.body.removeChild(div)\r\n    // vnode = null\r\n    // }, 1000)\r\n  }, time)\r\n}\r\n","<template>\r\n  <div class=\"page-login\">\r\n    <!-- 头部 -->\r\n    <LoginHeader />\r\n    <!-- 主体登录区域 -->\r\n    <section class=\"login-section\">\r\n      <div class=\"wrapper\">\r\n        <nav>\r\n          <a href=\"javascript:;\">账户登录</a>\r\n        </nav>\r\n        <LoginForm />\r\n      </div>\r\n    </section>\r\n    <!-- 底部 -->\r\n    <LoginFooter />\r\n  </div>\r\n</template>\r\n<script>\r\nimport LoginHeader from './components/login-header'\r\nimport LoginFooter from './components/login-footer'\r\nimport LoginForm from './components/login-form'\r\nexport default {\r\n  name: 'PageLogin',\r\n  components: {\r\n    LoginHeader,\r\n    LoginFooter,\r\n    LoginForm\r\n  }\r\n}\r\n</script>\r\n<style scoped lang='less'>\r\n.login-section {\r\n  background: url(../../assets/images/login-bg.png) no-repeat center / cover;\r\n  height: 488px;\r\n  position: relative;\r\n  .wrapper {\r\n    width: 380px;\r\n    background: #fff;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 54px;\r\n    transform: translate3d(100px, 0, 0);\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.15);\r\n    nav {\r\n      font-size: 14px;\r\n      height: 55px;\r\n      margin-bottom: 20px;\r\n      border-bottom: 1px solid #f5f5f5;\r\n      display: flex;\r\n      padding: 0 40px;\r\n      text-align: right;\r\n      align-items: center;\r\n      a {\r\n        flex: 1;\r\n        line-height: 1;\r\n        display: inline-block;\r\n        font-size: 18px;\r\n        position: relative;\r\n        text-align: center;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <header class=\"login-header\">\r\n    <div class=\"container\">\r\n      <h1 class=\"logo\"><RouterLink to=\"/\">小兔鲜</RouterLink></h1>\r\n      <h3 class=\"sub\"><slot /></h3>\r\n      <RouterLink class=\"entry\" to=\"/\">\r\n        进入网站首页\r\n        <i class=\"iconfont icon-angle-right\"></i>\r\n        <i class=\"iconfont icon-angle-right\"></i>\r\n      </RouterLink>\r\n    </div>\r\n  </header>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'LoginHeader'\r\n}\r\n</script>\r\n\r\n<style scoped lang='less'>\r\n.login-header {\r\n  background: #fff;\r\n  border-bottom: 1px solid #e4e4e4;\r\n  .container {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n  }\r\n  .logo {\r\n    width: 200px;\r\n    a {\r\n      display: block;\r\n      height: 132px;\r\n      width: 100%;\r\n      text-indent: -9999px;\r\n      background: url(../../../assets/images/logo.png) no-repeat center 18px /\r\n        contain;\r\n    }\r\n  }\r\n  .sub {\r\n    flex: 1;\r\n    font-size: 24px;\r\n    font-weight: normal;\r\n    margin-bottom: 38px;\r\n    margin-left: 20px;\r\n    color: #666;\r\n  }\r\n  .entry {\r\n    width: 120px;\r\n    margin-bottom: 38px;\r\n    font-size: 16px;\r\n    i {\r\n      font-size: 14px;\r\n      color: @xtxColor;\r\n      letter-spacing: -5px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./login-header.vue?vue&type=template&id=f97c0bbc&scoped=true\"\nimport script from \"./login-header.vue?vue&type=script&lang=js\"\nexport * from \"./login-header.vue?vue&type=script&lang=js\"\n\nimport \"./login-header.vue?vue&type=style&index=0&id=f97c0bbc&scoped=true&lang=less\"\n\nimport exportComponent from \"F:\\\\ithiema\\\\黑马学习\\\\就业班\\\\07rabbit_test\\\\rabbitv0.0.1\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f97c0bbc\"]])\n\nexport default __exports__","<template>\r\n  <footer class=\"login-footer\">\r\n    <div class='container'>\r\n      <p>\r\n        <a href=\"javascript:;\">关于我们</a>\r\n        <a href=\"javascript:;\">帮助中心</a>\r\n        <a href=\"javascript:;\">售后服务</a>\r\n        <a href=\"javascript:;\">配送与验收</a>\r\n        <a href=\"javascript:;\">商务合作</a>\r\n        <a href=\"javascript:;\">搜索推荐</a>\r\n        <a href=\"javascript:;\">友情链接</a>\r\n      </p>\r\n      <p>CopyRight &copy; 小兔鲜儿</p>\r\n    </div>\r\n  </footer>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'LoginFooter'\r\n}\r\n</script>\r\n\r\n<style scoped lang='less'>\r\n.login-footer {\r\n  padding: 30px 0 50px;\r\n  background: #fff;\r\n  p {\r\n    text-align: center;\r\n    color: #999;\r\n    padding-top: 20px;\r\n    a {\r\n      line-height: 1;\r\n      padding:0 10px;\r\n      color: #999;\r\n      display: inline-block;\r\n      ~ a {\r\n        border-left: 1px solid #ccc;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./login-footer.vue?vue&type=template&id=62518914&scoped=true\"\nimport script from \"./login-footer.vue?vue&type=script&lang=js\"\nexport * from \"./login-footer.vue?vue&type=script&lang=js\"\n\nimport \"./login-footer.vue?vue&type=style&index=0&id=62518914&scoped=true&lang=less\"\n\nimport exportComponent from \"F:\\\\ithiema\\\\黑马学习\\\\就业班\\\\07rabbit_test\\\\rabbitv0.0.1\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-62518914\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"account-box\">\r\n    <!-- 开启规则不用v-model数据但是要写错误信息 -->\r\n    <Form class=\"form\" :validation-schema=\"rules\" v-slot=\"{ errors }\" ref=\"fm\">\r\n      <!-- 错误信息如果有错误返回一个错误对象中有错误信息 通过返回null-->\r\n      <!-- <p>{{ errors }}</p> -->\r\n      <!-- 表单元素 -->\r\n      <div class=\"form-item\">\r\n        <div class=\"input\">\r\n          <i class=\"iconfont icon-user\"></i>\r\n          <Field\r\n            type=\"text\"\r\n            placeholder=\"请输入用户名或手机号\"\r\n            v-model=\"FormData.account\"\r\n            name=\"account\"\r\n            :class=\"{ error: errors.account }\"\r\n          />\r\n        </div>\r\n        <!-- 表单验证错误信息提示 -->\r\n        <div\r\n          v-if=\"errors.account\"\r\n          class=\"error\"\r\n          :class=\"{ errtips: errors.account }\"\r\n        >\r\n          <i class=\"iconfont icon-warning\" />请输入手机号\r\n        </div>\r\n      </div>\r\n      <div class=\"form-item\">\r\n        <div class=\"input\">\r\n          <i class=\"iconfont icon-lock\"></i>\r\n          <Field\r\n            type=\"password\"\r\n            placeholder=\"请输入密码\"\r\n            v-model=\"FormData.password\"\r\n            name=\"password\"\r\n            :class=\"{ error: errors.password }\"\r\n          />\r\n        </div>\r\n        <!-- 表单验证错误信息提示 -->\r\n        <div\r\n          v-if=\"errors.password\"\r\n          class=\"error\"\r\n          :class=\"{ errtips: errors.password }\"\r\n        >\r\n          <i class=\"iconfont icon-warning\" />请输入密码\r\n        </div>\r\n      </div>\r\n      <div class=\"form-item\">\r\n        <div class=\"agree\">\r\n          <!-- 单选框 支持双向绑定-->\r\n          <!-- <XtxCheckbox v-model=\"FormData.isAgree\"/> -->\r\n          <!-- 使用Field来渲染一个自定义的组件 而不是浏览器支持的原生标签时，需要我们添加as属性来渲染自定义组件 -->\r\n          <Field v-model=\"FormData.isAgree\" as=\"XtxCheckbox\" name=\"isAgree\">\r\n            <span>我已同意</span>\r\n          </Field>\r\n          <a href=\"javascript:;\">《隐私条款》</a>\r\n          <span>和</span>\r\n          <a href=\"javascript:;\">《服务条款》</a>\r\n        </div>\r\n        <!-- 表单验证错误信息提示 -->\r\n        <div\r\n          v-if=\"errors.isAgree\"\r\n          class=\"error\"\r\n          :class=\"{ errtips: errors.isAgree }\"\r\n        >\r\n          <i class=\"iconfont icon-warning\" />{{ errors.isAgree }}\r\n        </div>\r\n      </div>\r\n      <a href=\"javascript:;\" class=\"btn\" @click=\"submit\">登录</a>\r\n    </Form>\r\n    <div class=\"action\">\r\n      <img\r\n        src=\"https://qzonestyle.gtimg.cn/qzone/vas/opensns/res/img/Connect_logo_7.png\"\r\n        alt=\"\"\r\n      />\r\n      <div class=\"url\">\r\n        <a href=\"javascript:;\">忘记密码</a>\r\n        <a href=\"javascript:;\">免费注册</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n// vee-validate提供组件需要注册类似element中el-Form\r\nimport { Form, Field } from 'vee-validate'\r\nimport { reactive, ref } from 'vue'\r\n// 规则\r\nimport rulesFns from '@/utils/vee-validate-schema'\r\nimport { useStore } from 'vuex'\r\nimport msg from '@/components/Message'\r\nimport { useRoute, useRouter } from 'vue-router'\r\n// 路由\r\nexport default {\r\n  /**\r\n   *  安装\r\n   * 准备表单数据和校验规则\r\n   * 使用form和field等组件\r\n   */\r\n  components: {\r\n    // 表单\r\n    Form,\r\n    // 表单域input\r\n    Field\r\n  },\r\n  setup () {\r\n    // router实例\r\n    const router = useRouter()\r\n    // 路由规则\r\n    const route = useRoute()\r\n    // store实例\r\n    const store = useStore()\r\n    // 表单实例\r\n    const fm = ref(null)\r\n    // 表单数据\r\n    const FormData = reactive({\r\n      account: 'dijia', // 用户名\r\n      password: '123456', // 密码\r\n      // 父改子数据不同步无效果因为插件还没更新好所以默认要给false\r\n      isAgree: false\r\n    })\r\n    // 表单规则----普通对象也行 注意不能重名了rules\r\n    const rules = reactive({\r\n      account: rulesFns.account,\r\n      password: rulesFns.password,\r\n      isAgree: rulesFns.isAgree\r\n    })\r\n    // 1. 把input改成 Field 组件，默认解析成input\r\n    // 2. Field 添加name属性，作用是指定使用规则中哪个校验规则(函数)\r\n    // 3. Field添加v - model，作用是提供表单数据的双向绑定\r\n    // 4. 发生表单校验错误，显示错误类名error，提示红色边框并显示errors对象中的错误提示信息\r\n\r\n    // 整体表单校验\r\n    // 1. 通过ref获得表单组件对象\r\n    // 2. 执行组件对象身上的validate方法 （执行完毕返回promise对象）\r\n\r\n    const submit = async () => {\r\n      // await\r\n      // 调用接口\r\n      // console.log('loading', fm.value.validate())\r\n      const { valid } = await fm.value.validate() // 拿到valid布尔值\r\n      // console.log(res)\r\n      if (valid) {\r\n        // 掉接口\r\n        // console.log('loading')\r\n        try {\r\n          // 如果用ref要.value\r\n          await store.dispatch('user/getUser', FormData)\r\n          msg({ type: 'success', text: '登录成功' })\r\n          // 获取购物车最新数据(已合并)\r\n          store.dispatch('cart/mergeLocalCartActions')\r\n          // router跳转---携带参数\r\n          router.replace(route.query.redirectUrl || '/')\r\n        } catch (error) {\r\n          console.dir(error)\r\n          msg({ type: 'error', text: error.response.data.message })\r\n        }\r\n      }\r\n    }\r\n    return { FormData, rules, fm, submit }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.errtips {\r\n  color: #e40438;\r\n  animation-name: errtips;\r\n  animation-duration: 0.5s;\r\n}\r\n@keyframes errtips {\r\n  10% {\r\n    transform: translateY(1px);\r\n  }\r\n  20% {\r\n    transform: translateY(-1px);\r\n  }\r\n  30% {\r\n    transform: translateY(1px);\r\n  }\r\n  40% {\r\n    transform: translateY(-1px);\r\n  }\r\n  50% {\r\n    transform: translateY(1px);\r\n  }\r\n  60% {\r\n    transform: translateY(-1px);\r\n  }\r\n  70% {\r\n    transform: translateY(1px);\r\n  }\r\n  80% {\r\n    transform: translateY(-1px);\r\n  }\r\n  90% {\r\n    transform: translateY(1px);\r\n  }\r\n  100% {\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n// 账号容器\r\n// 账号容器\r\n.account-box {\r\n  .toggle {\r\n    padding: 15px 40px;\r\n    text-align: right;\r\n    a {\r\n      color: @xtxColor;\r\n      i {\r\n        font-size: 14px;\r\n      }\r\n    }\r\n  }\r\n  .form {\r\n    padding: 0 20px;\r\n    &-item {\r\n      margin-bottom: 28px;\r\n      .input {\r\n        position: relative;\r\n        height: 36px;\r\n        > i {\r\n          width: 34px;\r\n          height: 34px;\r\n          background: #cfcdcd;\r\n          color: #fff;\r\n          position: absolute;\r\n          left: 1px;\r\n          top: 1px;\r\n          text-align: center;\r\n          line-height: 34px;\r\n          font-size: 18px;\r\n        }\r\n        input {\r\n          padding-left: 44px;\r\n          border: 1px solid #cfcdcd;\r\n          height: 36px;\r\n          line-height: 36px;\r\n          width: 100%;\r\n          &.error {\r\n            border-color: @priceColor;\r\n          }\r\n          &.active,\r\n          &:focus {\r\n            border-color: @xtxColor;\r\n          }\r\n        }\r\n        .code {\r\n          position: absolute;\r\n          right: 1px;\r\n          top: 1px;\r\n          text-align: center;\r\n          line-height: 34px;\r\n          font-size: 14px;\r\n          background: #f5f5f5;\r\n          color: #666;\r\n          width: 90px;\r\n          height: 34px;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n      > .error {\r\n        position: absolute;\r\n        font-size: 12px;\r\n        line-height: 28px;\r\n        color: @priceColor;\r\n        i {\r\n          font-size: 14px;\r\n          margin-right: 2px;\r\n        }\r\n      }\r\n    }\r\n    .agree {\r\n      a {\r\n        color: #069;\r\n      }\r\n    }\r\n    .btn {\r\n      display: block;\r\n      width: 100%;\r\n      height: 40px;\r\n      color: #fff;\r\n      text-align: center;\r\n      line-height: 40px;\r\n      background: @xtxColor;\r\n      &.disabled {\r\n        background: #cfcdcd;\r\n      }\r\n    }\r\n  }\r\n  .action {\r\n    padding: 20px 40px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    .url {\r\n      a {\r\n        color: #999;\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","/**\n  * vee-validate v4.5.6\n  * (c) 2021 Abdelrahman Awad\n  * @license MIT\n  */\nimport { inject, getCurrentInstance, warn as warn$1, ref, unref, computed, reactive, watch, onUnmounted, nextTick, onMounted, provide, isRef, onBeforeUnmount, defineComponent, toRef, resolveDynamicComponent, h, watchEffect, markRaw, readonly } from 'vue';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\nfunction isCallable(fn) {\r\n    return typeof fn === 'function';\r\n}\r\nfunction isNullOrUndefined(value) {\r\n    return value === null || value === undefined;\r\n}\r\nconst isObject = (obj) => obj !== null && !!obj && typeof obj === 'object' && !Array.isArray(obj);\r\nfunction isIndex(value) {\r\n    return Number(value) >= 0;\r\n}\r\nfunction toNumber(value) {\r\n    const n = parseFloat(value);\r\n    return isNaN(n) ? value : n;\r\n}\n\nconst RULES = {};\r\n/**\r\n * Adds a custom validator to the list of validation rules.\r\n */\r\nfunction defineRule(id, validator) {\r\n    // makes sure new rules are properly formatted.\r\n    guardExtend(id, validator);\r\n    RULES[id] = validator;\r\n}\r\n/**\r\n * Gets an already defined rule\r\n */\r\nfunction resolveRule(id) {\r\n    return RULES[id];\r\n}\r\n/**\r\n * Guards from extension violations.\r\n */\r\nfunction guardExtend(id, validator) {\r\n    if (isCallable(validator)) {\r\n        return;\r\n    }\r\n    throw new Error(`Extension Error: The validator '${id}' must be a function.`);\r\n}\n\nconst FormContextKey = Symbol('vee-validate-form');\r\nconst FieldContextKey = Symbol('vee-validate-field-instance');\r\nconst IS_ABSENT = Symbol('Default empty value');\n\nfunction isLocator(value) {\r\n    return isCallable(value) && !!value.__locatorRef;\r\n}\r\n/**\r\n * Checks if an tag name is a native HTML tag and not a Vue component\r\n */\r\nfunction isHTMLTag(tag) {\r\n    return ['input', 'textarea', 'select'].includes(tag);\r\n}\r\n/**\r\n * Checks if an input is of type file\r\n */\r\nfunction isFileInputNode(tag, attrs) {\r\n    return isHTMLTag(tag) && attrs.type === 'file';\r\n}\r\nfunction isYupValidator(value) {\r\n    return !!value && isCallable(value.validate);\r\n}\r\nfunction hasCheckedAttr(type) {\r\n    return type === 'checkbox' || type === 'radio';\r\n}\r\nfunction isContainerValue(value) {\r\n    return isObject(value) || Array.isArray(value);\r\n}\r\n/**\r\n * True if the value is an empty object or array\r\n */\r\nfunction isEmptyContainer(value) {\r\n    if (Array.isArray(value)) {\r\n        return value.length === 0;\r\n    }\r\n    return isObject(value) && Object.keys(value).length === 0;\r\n}\r\n/**\r\n * Checks if the path opted out of nested fields using `[fieldName]` syntax\r\n */\r\nfunction isNotNestedPath(path) {\r\n    return /^\\[.+\\]$/i.test(path);\r\n}\r\n/**\r\n * Checks if an element is a native HTML5 multi-select input element\r\n */\r\nfunction isNativeMultiSelect(el) {\r\n    return isNativeSelect(el) && el.multiple;\r\n}\r\n/**\r\n * Checks if an element is a native HTML5 select input element\r\n */\r\nfunction isNativeSelect(el) {\r\n    return el.tagName === 'SELECT';\r\n}\r\n/**\r\n * Checks if a tag name with attrs object will render a native multi-select element\r\n */\r\nfunction isNativeMultiSelectNode(tag, attrs) {\r\n    // The falsy value array is the values that Vue won't add the `multiple` prop if it has one of these values\r\n    const hasTruthyBindingValue = ![false, null, undefined, 0].includes(attrs.multiple) && !Number.isNaN(attrs.multiple);\r\n    return tag === 'select' && 'multiple' in attrs && hasTruthyBindingValue;\r\n}\r\n/**\r\n * Checks if a node should have a `:value` binding or not\r\n *\r\n * These nodes should not have a value binding\r\n * For files, because they are not reactive\r\n * For multi-selects because the value binding will reset the value\r\n */\r\nfunction shouldHaveValueBinding(tag, attrs) {\r\n    return isNativeMultiSelectNode(tag, attrs) || isFileInputNode(tag, attrs);\r\n}\r\nfunction isFormSubmitEvent(evt) {\r\n    return isEvent(evt) && evt.target && 'submit' in evt.target;\r\n}\r\nfunction isEvent(evt) {\r\n    if (!evt) {\r\n        return false;\r\n    }\r\n    if (typeof Event !== 'undefined' && isCallable(Event) && evt instanceof Event) {\r\n        return true;\r\n    }\r\n    // this is for IE and Cypress #3161\r\n    /* istanbul ignore next */\r\n    if (evt && evt.srcElement) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction isPropPresent(obj, prop) {\r\n    return prop in obj && obj[prop] !== IS_ABSENT;\r\n}\n\nfunction cleanupNonNestedPath(path) {\r\n    if (isNotNestedPath(path)) {\r\n        return path.replace(/\\[|\\]/gi, '');\r\n    }\r\n    return path;\r\n}\r\nfunction getFromPath(object, path, fallback) {\r\n    if (!object) {\r\n        return fallback;\r\n    }\r\n    if (isNotNestedPath(path)) {\r\n        return object[cleanupNonNestedPath(path)];\r\n    }\r\n    const resolvedValue = (path || '')\r\n        .split(/\\.|\\[(\\d+)\\]/)\r\n        .filter(Boolean)\r\n        .reduce((acc, propKey) => {\r\n        if (isContainerValue(acc) && propKey in acc) {\r\n            return acc[propKey];\r\n        }\r\n        return fallback;\r\n    }, object);\r\n    return resolvedValue;\r\n}\r\n/**\r\n * Sets a nested property value in a path, creates the path properties if it doesn't exist\r\n */\r\nfunction setInPath(object, path, value) {\r\n    if (isNotNestedPath(path)) {\r\n        object[cleanupNonNestedPath(path)] = value;\r\n        return;\r\n    }\r\n    const keys = path.split(/\\.|\\[(\\d+)\\]/).filter(Boolean);\r\n    let acc = object;\r\n    for (let i = 0; i < keys.length; i++) {\r\n        // Last key, set it\r\n        if (i === keys.length - 1) {\r\n            acc[keys[i]] = value;\r\n            return;\r\n        }\r\n        // Key does not exist, create a container for it\r\n        if (!(keys[i] in acc) || isNullOrUndefined(acc[keys[i]])) {\r\n            // container can be either an object or an array depending on the next key if it exists\r\n            acc[keys[i]] = isIndex(keys[i + 1]) ? [] : {};\r\n        }\r\n        acc = acc[keys[i]];\r\n    }\r\n}\r\nfunction unset(object, key) {\r\n    if (Array.isArray(object) && isIndex(key)) {\r\n        object.splice(Number(key), 1);\r\n        return;\r\n    }\r\n    if (isObject(object)) {\r\n        delete object[key];\r\n    }\r\n}\r\n/**\r\n * Removes a nested property from object\r\n */\r\nfunction unsetPath(object, path) {\r\n    if (isNotNestedPath(path)) {\r\n        delete object[cleanupNonNestedPath(path)];\r\n        return;\r\n    }\r\n    const keys = path.split(/\\.|\\[(\\d+)\\]/).filter(Boolean);\r\n    let acc = object;\r\n    for (let i = 0; i < keys.length; i++) {\r\n        // Last key, unset it\r\n        if (i === keys.length - 1) {\r\n            unset(acc, keys[i]);\r\n            break;\r\n        }\r\n        // Key does not exist, exit\r\n        if (!(keys[i] in acc) || isNullOrUndefined(acc[keys[i]])) {\r\n            break;\r\n        }\r\n        acc = acc[keys[i]];\r\n    }\r\n    const pathValues = keys.map((_, idx) => {\r\n        return getFromPath(object, keys.slice(0, idx).join('.'));\r\n    });\r\n    for (let i = pathValues.length - 1; i >= 0; i--) {\r\n        if (!isEmptyContainer(pathValues[i])) {\r\n            continue;\r\n        }\r\n        if (i === 0) {\r\n            unset(object, keys[0]);\r\n            continue;\r\n        }\r\n        unset(pathValues[i - 1], keys[i - 1]);\r\n    }\r\n}\r\n/**\r\n * A typed version of Object.keys\r\n */\r\nfunction keysOf(record) {\r\n    return Object.keys(record);\r\n}\r\n// Uses same component provide as its own injections\r\n// Due to changes in https://github.com/vuejs/vue-next/pull/2424\r\nfunction injectWithSelf(symbol, def = undefined) {\r\n    const vm = getCurrentInstance();\r\n    return (vm === null || vm === void 0 ? void 0 : vm.provides[symbol]) || inject(symbol, def);\r\n}\r\nfunction warn(message) {\r\n    warn$1(`[vee-validate]: ${message}`);\r\n}\r\n/**\r\n * Ensures we deal with a singular field value\r\n */\r\nfunction normalizeField(field) {\r\n    if (Array.isArray(field)) {\r\n        return field[0];\r\n    }\r\n    return field;\r\n}\r\nfunction resolveNextCheckboxValue(currentValue, checkedValue, uncheckedValue) {\r\n    if (Array.isArray(currentValue)) {\r\n        const newVal = [...currentValue];\r\n        const idx = newVal.indexOf(checkedValue);\r\n        idx >= 0 ? newVal.splice(idx, 1) : newVal.push(checkedValue);\r\n        return newVal;\r\n    }\r\n    return currentValue === checkedValue ? uncheckedValue : checkedValue;\r\n}\r\n/**\r\n * Creates a throttled function that only invokes the provided function (`func`) at most once per within a given number of milliseconds\r\n * (`limit`)\r\n */\r\nfunction throttle(func, limit) {\r\n    let inThrottle;\r\n    let lastResult;\r\n    return function (...args) {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const context = this;\r\n        if (!inThrottle) {\r\n            inThrottle = true;\r\n            setTimeout(() => (inThrottle = false), limit);\r\n            lastResult = func.apply(context, args);\r\n        }\r\n        return lastResult;\r\n    };\r\n}\r\nfunction debounceAsync(inner, ms = 0) {\r\n    let timer = null;\r\n    let resolves = [];\r\n    return function (...args) {\r\n        // Run the function after a certain amount of time\r\n        if (timer) {\r\n            window.clearTimeout(timer);\r\n        }\r\n        timer = window.setTimeout(() => {\r\n            // Get the result of the inner function, then apply it to the resolve function of\r\n            // each promise that has been created since the last time the inner function was run\r\n            const result = inner(...args);\r\n            resolves.forEach(r => r(result));\r\n            resolves = [];\r\n        }, ms);\r\n        return new Promise(resolve => resolves.push(resolve));\r\n    };\r\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst normalizeChildren = (tag, context, slotProps) => {\r\n    if (!context.slots.default) {\r\n        return context.slots.default;\r\n    }\r\n    if (typeof tag === 'string' || !tag) {\r\n        return context.slots.default(slotProps());\r\n    }\r\n    return {\r\n        default: () => { var _a, _b; return (_b = (_a = context.slots).default) === null || _b === void 0 ? void 0 : _b.call(_a, slotProps()); },\r\n    };\r\n};\r\n/**\r\n * Vue adds a `_value` prop at the moment on the input elements to store the REAL value on them, real values are different than the `value` attribute\r\n * as they do not get casted to strings unlike `el.value` which preserves user-code behavior\r\n */\r\nfunction getBoundValue(el) {\r\n    if (hasValueBinding(el)) {\r\n        return el._value;\r\n    }\r\n    return undefined;\r\n}\r\n/**\r\n * Vue adds a `_value` prop at the moment on the input elements to store the REAL value on them, real values are different than the `value` attribute\r\n * as they do not get casted to strings unlike `el.value` which preserves user-code behavior\r\n */\r\nfunction hasValueBinding(el) {\r\n    return '_value' in el;\r\n}\n\nfunction normalizeEventValue(value) {\r\n    if (!isEvent(value)) {\r\n        return value;\r\n    }\r\n    const input = value.target;\r\n    // Vue sets the current bound value on `_value` prop\r\n    // for checkboxes it it should fetch the value binding type as is (boolean instead of string)\r\n    if (hasCheckedAttr(input.type) && hasValueBinding(input)) {\r\n        return getBoundValue(input);\r\n    }\r\n    if (input.type === 'file' && input.files) {\r\n        return Array.from(input.files);\r\n    }\r\n    if (isNativeMultiSelect(input)) {\r\n        return Array.from(input.options)\r\n            .filter(opt => opt.selected && !opt.disabled)\r\n            .map(getBoundValue);\r\n    }\r\n    // makes sure we get the actual `option` bound value\r\n    // #3440\r\n    if (isNativeSelect(input)) {\r\n        const selectedOption = Array.from(input.options).find(opt => opt.selected);\r\n        return selectedOption ? getBoundValue(selectedOption) : input.value;\r\n    }\r\n    return input.value;\r\n}\n\n/**\r\n * Normalizes the given rules expression.\r\n */\r\nfunction normalizeRules(rules) {\r\n    const acc = {};\r\n    Object.defineProperty(acc, '_$$isNormalized', {\r\n        value: true,\r\n        writable: false,\r\n        enumerable: false,\r\n        configurable: false,\r\n    });\r\n    if (!rules) {\r\n        return acc;\r\n    }\r\n    // Object is already normalized, skip.\r\n    if (isObject(rules) && rules._$$isNormalized) {\r\n        return rules;\r\n    }\r\n    if (isObject(rules)) {\r\n        return Object.keys(rules).reduce((prev, curr) => {\r\n            const params = normalizeParams(rules[curr]);\r\n            if (rules[curr] !== false) {\r\n                prev[curr] = buildParams(params);\r\n            }\r\n            return prev;\r\n        }, acc);\r\n    }\r\n    /* istanbul ignore if */\r\n    if (typeof rules !== 'string') {\r\n        return acc;\r\n    }\r\n    return rules.split('|').reduce((prev, rule) => {\r\n        const parsedRule = parseRule(rule);\r\n        if (!parsedRule.name) {\r\n            return prev;\r\n        }\r\n        prev[parsedRule.name] = buildParams(parsedRule.params);\r\n        return prev;\r\n    }, acc);\r\n}\r\n/**\r\n * Normalizes a rule param.\r\n */\r\nfunction normalizeParams(params) {\r\n    if (params === true) {\r\n        return [];\r\n    }\r\n    if (Array.isArray(params)) {\r\n        return params;\r\n    }\r\n    if (isObject(params)) {\r\n        return params;\r\n    }\r\n    return [params];\r\n}\r\nfunction buildParams(provided) {\r\n    const mapValueToLocator = (value) => {\r\n        // A target param using interpolation\r\n        if (typeof value === 'string' && value[0] === '@') {\r\n            return createLocator(value.slice(1));\r\n        }\r\n        return value;\r\n    };\r\n    if (Array.isArray(provided)) {\r\n        return provided.map(mapValueToLocator);\r\n    }\r\n    // #3073\r\n    if (provided instanceof RegExp) {\r\n        return [provided];\r\n    }\r\n    return Object.keys(provided).reduce((prev, key) => {\r\n        prev[key] = mapValueToLocator(provided[key]);\r\n        return prev;\r\n    }, {});\r\n}\r\n/**\r\n * Parses a rule string expression.\r\n */\r\nconst parseRule = (rule) => {\r\n    let params = [];\r\n    const name = rule.split(':')[0];\r\n    if (rule.includes(':')) {\r\n        params = rule.split(':').slice(1).join(':').split(',');\r\n    }\r\n    return { name, params };\r\n};\r\nfunction createLocator(value) {\r\n    const locator = (crossTable) => {\r\n        const val = getFromPath(crossTable, value) || crossTable[value];\r\n        return val;\r\n    };\r\n    locator.__locatorRef = value;\r\n    return locator;\r\n}\r\nfunction extractLocators(params) {\r\n    if (Array.isArray(params)) {\r\n        return params.filter(isLocator);\r\n    }\r\n    return keysOf(params)\r\n        .filter(key => isLocator(params[key]))\r\n        .map(key => params[key]);\r\n}\n\nconst DEFAULT_CONFIG = {\r\n    generateMessage: ({ field }) => `${field} is not valid.`,\r\n    bails: true,\r\n    validateOnBlur: true,\r\n    validateOnChange: true,\r\n    validateOnInput: false,\r\n    validateOnModelUpdate: true,\r\n};\r\nlet currentConfig = Object.assign({}, DEFAULT_CONFIG);\r\nconst getConfig = () => currentConfig;\r\nconst setConfig = (newConf) => {\r\n    currentConfig = Object.assign(Object.assign({}, currentConfig), newConf);\r\n};\r\nconst configure = setConfig;\n\n/**\r\n * Validates a value against the rules.\r\n */\r\nasync function validate(value, rules, options = {}) {\r\n    const shouldBail = options === null || options === void 0 ? void 0 : options.bails;\r\n    const field = {\r\n        name: (options === null || options === void 0 ? void 0 : options.name) || '{field}',\r\n        rules,\r\n        bails: shouldBail !== null && shouldBail !== void 0 ? shouldBail : true,\r\n        formData: (options === null || options === void 0 ? void 0 : options.values) || {},\r\n    };\r\n    const result = await _validate(field, value);\r\n    const errors = result.errors;\r\n    return {\r\n        errors,\r\n        valid: !errors.length,\r\n    };\r\n}\r\n/**\r\n * Starts the validation process.\r\n */\r\nasync function _validate(field, value) {\r\n    if (isYupValidator(field.rules)) {\r\n        return validateFieldWithYup(value, field.rules, { bails: field.bails });\r\n    }\r\n    // if a generic function, use it as the pipeline.\r\n    if (isCallable(field.rules)) {\r\n        const ctx = {\r\n            field: field.name,\r\n            form: field.formData,\r\n            value: value,\r\n        };\r\n        const result = await field.rules(value, ctx);\r\n        const isValid = typeof result !== 'string' && result;\r\n        const message = typeof result === 'string' ? result : _generateFieldError(ctx);\r\n        return {\r\n            errors: !isValid ? [message] : [],\r\n        };\r\n    }\r\n    const normalizedContext = Object.assign(Object.assign({}, field), { rules: normalizeRules(field.rules) });\r\n    const errors = [];\r\n    const rulesKeys = Object.keys(normalizedContext.rules);\r\n    const length = rulesKeys.length;\r\n    for (let i = 0; i < length; i++) {\r\n        const rule = rulesKeys[i];\r\n        const result = await _test(normalizedContext, value, {\r\n            name: rule,\r\n            params: normalizedContext.rules[rule],\r\n        });\r\n        if (result.error) {\r\n            errors.push(result.error);\r\n            if (field.bails) {\r\n                return {\r\n                    errors,\r\n                };\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        errors,\r\n    };\r\n}\r\n/**\r\n * Handles yup validation\r\n */\r\nasync function validateFieldWithYup(value, validator, opts) {\r\n    var _a;\r\n    const errors = await validator\r\n        .validate(value, {\r\n        abortEarly: (_a = opts.bails) !== null && _a !== void 0 ? _a : true,\r\n    })\r\n        .then(() => [])\r\n        .catch((err) => {\r\n        // Yup errors have a name prop one them.\r\n        // https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\r\n        if (err.name === 'ValidationError') {\r\n            return err.errors;\r\n        }\r\n        // re-throw the error so we don't hide it\r\n        throw err;\r\n    });\r\n    return {\r\n        errors,\r\n    };\r\n}\r\n/**\r\n * Tests a single input value against a rule.\r\n */\r\nasync function _test(field, value, rule) {\r\n    const validator = resolveRule(rule.name);\r\n    if (!validator) {\r\n        throw new Error(`No such validator '${rule.name}' exists.`);\r\n    }\r\n    const params = fillTargetValues(rule.params, field.formData);\r\n    const ctx = {\r\n        field: field.name,\r\n        value,\r\n        form: field.formData,\r\n        rule: Object.assign(Object.assign({}, rule), { params }),\r\n    };\r\n    const result = await validator(value, params, ctx);\r\n    if (typeof result === 'string') {\r\n        return {\r\n            error: result,\r\n        };\r\n    }\r\n    return {\r\n        error: result ? undefined : _generateFieldError(ctx),\r\n    };\r\n}\r\n/**\r\n * Generates error messages.\r\n */\r\nfunction _generateFieldError(fieldCtx) {\r\n    const message = getConfig().generateMessage;\r\n    if (!message) {\r\n        return 'Field is invalid';\r\n    }\r\n    return message(fieldCtx);\r\n}\r\nfunction fillTargetValues(params, crossTable) {\r\n    const normalize = (value) => {\r\n        if (isLocator(value)) {\r\n            return value(crossTable);\r\n        }\r\n        return value;\r\n    };\r\n    if (Array.isArray(params)) {\r\n        return params.map(normalize);\r\n    }\r\n    return Object.keys(params).reduce((acc, param) => {\r\n        acc[param] = normalize(params[param]);\r\n        return acc;\r\n    }, {});\r\n}\r\nasync function validateYupSchema(schema, values) {\r\n    const errorObjects = await schema\r\n        .validate(values, { abortEarly: false })\r\n        .then(() => [])\r\n        .catch((err) => {\r\n        // Yup errors have a name prop one them.\r\n        // https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\r\n        if (err.name !== 'ValidationError') {\r\n            throw err;\r\n        }\r\n        // list of aggregated errors\r\n        return err.inner || [];\r\n    });\r\n    const results = {};\r\n    const errors = {};\r\n    for (const error of errorObjects) {\r\n        const messages = error.errors;\r\n        results[error.path] = { valid: !messages.length, errors: messages };\r\n        if (messages.length) {\r\n            errors[error.path] = messages[0];\r\n        }\r\n    }\r\n    return {\r\n        valid: !errorObjects.length,\r\n        results,\r\n        errors,\r\n    };\r\n}\r\nasync function validateObjectSchema(schema, values, opts) {\r\n    const paths = keysOf(schema);\r\n    const validations = paths.map(async (path) => {\r\n        var _a, _b, _c;\r\n        const fieldResult = await validate(getFromPath(values, path), schema[path], {\r\n            name: ((_a = opts === null || opts === void 0 ? void 0 : opts.names) === null || _a === void 0 ? void 0 : _a[path]) || path,\r\n            values: values,\r\n            bails: (_c = (_b = opts === null || opts === void 0 ? void 0 : opts.bailsMap) === null || _b === void 0 ? void 0 : _b[path]) !== null && _c !== void 0 ? _c : true,\r\n        });\r\n        return Object.assign(Object.assign({}, fieldResult), { path });\r\n    });\r\n    let isAllValid = true;\r\n    const validationResults = await Promise.all(validations);\r\n    const results = {};\r\n    const errors = {};\r\n    for (const result of validationResults) {\r\n        results[result.path] = {\r\n            valid: result.valid,\r\n            errors: result.errors,\r\n        };\r\n        if (!result.valid) {\r\n            isAllValid = false;\r\n            errors[result.path] = result.errors[0];\r\n        }\r\n    }\r\n    return {\r\n        valid: isAllValid,\r\n        results,\r\n        errors,\r\n    };\r\n}\n\nfunction set(obj, key, val) {\n\tif (typeof val.value === 'object') val.value = klona(val.value);\n\tif (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') {\n\t\tObject.defineProperty(obj, key, val);\n\t} else obj[key] = val.value;\n}\n\nfunction klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar i=0, k, list, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\ttmp = Object.create(x.__proto__ || null);\n\t} else if (str === '[object Array]') {\n\t\ttmp = Array(x.length);\n\t} else if (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t} else if (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t} else if (str === '[object Date]') {\n\t\ttmp = new Date(+x);\n\t} else if (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t} else if (str === '[object DataView]') {\n\t\ttmp = new x.constructor( klona(x.buffer) );\n\t} else if (str === '[object ArrayBuffer]') {\n\t\ttmp = x.slice(0);\n\t} else if (str.slice(-6) === 'Array]') {\n\t\t// ArrayBuffer.isView(x)\n\t\t// ~> `new` bcuz `Buffer.slice` => ref\n\t\ttmp = new x.constructor(x);\n\t}\n\n\tif (tmp) {\n\t\tfor (list=Object.getOwnPropertySymbols(x); i < list.length; i++) {\n\t\t\tset(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n\t\t}\n\n\t\tfor (i=0, list=Object.getOwnPropertyNames(x); i < list.length; i++) {\n\t\t\tif (Object.hasOwnProperty.call(tmp, k=list[i]) && tmp[k] === x[k]) continue;\n\t\t\tset(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n\t\t}\n\t}\n\n\treturn tmp || x;\n}\n\nvar es6 = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n    if ((a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      for (i of a.entries())\n        if (!equal(i[1], b.get(i[0]))) return false;\n      return true;\n    }\n\n    if ((a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n\nlet ID_COUNTER = 0;\r\nfunction useFieldState(path, init) {\r\n    const { value, initialValue, setInitialValue } = _useFieldValue(path, init.modelValue, !init.standalone);\r\n    const { errorMessage, errors, setErrors } = _useFieldErrors(path, !init.standalone);\r\n    const meta = _useFieldMeta(value, initialValue, errors);\r\n    const id = ID_COUNTER >= Number.MAX_SAFE_INTEGER ? 0 : ++ID_COUNTER;\r\n    function setState(state) {\r\n        var _a;\r\n        if ('value' in state) {\r\n            value.value = state.value;\r\n        }\r\n        if ('errors' in state) {\r\n            setErrors(state.errors);\r\n        }\r\n        if ('touched' in state) {\r\n            meta.touched = (_a = state.touched) !== null && _a !== void 0 ? _a : meta.touched;\r\n        }\r\n        if ('initialValue' in state) {\r\n            setInitialValue(state.initialValue);\r\n        }\r\n    }\r\n    return {\r\n        id,\r\n        path,\r\n        value,\r\n        initialValue,\r\n        meta,\r\n        errors,\r\n        errorMessage,\r\n        setState,\r\n    };\r\n}\r\n/**\r\n * Creates the field value and resolves the initial value\r\n */\r\nfunction _useFieldValue(path, modelValue, shouldInjectForm) {\r\n    const form = shouldInjectForm ? injectWithSelf(FormContextKey, undefined) : undefined;\r\n    const modelRef = ref(unref(modelValue));\r\n    function resolveInitialValue() {\r\n        if (!form) {\r\n            return unref(modelRef);\r\n        }\r\n        return getFromPath(form.meta.value.initialValues, unref(path), unref(modelRef));\r\n    }\r\n    function setInitialValue(value) {\r\n        if (!form) {\r\n            modelRef.value = value;\r\n            return;\r\n        }\r\n        form.setFieldInitialValue(unref(path), value);\r\n    }\r\n    const initialValue = computed(resolveInitialValue);\r\n    // if no form is associated, use a regular ref.\r\n    if (!form) {\r\n        const value = ref(resolveInitialValue());\r\n        return {\r\n            value,\r\n            initialValue,\r\n            setInitialValue,\r\n        };\r\n    }\r\n    // to set the initial value, first check if there is a current value, if there is then use it.\r\n    // otherwise use the configured initial value if it exists.\r\n    // prioritize model value over form values\r\n    // #3429\r\n    const currentValue = modelValue ? unref(modelValue) : getFromPath(form.values, unref(path), unref(initialValue));\r\n    form.stageInitialValue(unref(path), currentValue);\r\n    // otherwise use a computed setter that triggers the `setFieldValue`\r\n    const value = computed({\r\n        get() {\r\n            return getFromPath(form.values, unref(path));\r\n        },\r\n        set(newVal) {\r\n            form.setFieldValue(unref(path), newVal);\r\n        },\r\n    });\r\n    return {\r\n        value,\r\n        initialValue,\r\n        setInitialValue,\r\n    };\r\n}\r\n/**\r\n * Creates meta flags state and some associated effects with them\r\n */\r\nfunction _useFieldMeta(currentValue, initialValue, errors) {\r\n    const meta = reactive({\r\n        touched: false,\r\n        pending: false,\r\n        valid: true,\r\n        validated: !!unref(errors).length,\r\n        initialValue: computed(() => unref(initialValue)),\r\n        dirty: computed(() => {\r\n            return !es6(unref(currentValue), unref(initialValue));\r\n        }),\r\n    });\r\n    watch(errors, value => {\r\n        meta.valid = !value.length;\r\n    }, {\r\n        immediate: true,\r\n        flush: 'sync',\r\n    });\r\n    return meta;\r\n}\r\n/**\r\n * Creates the error message state for the field state\r\n */\r\nfunction _useFieldErrors(path, shouldInjectForm) {\r\n    const form = shouldInjectForm ? injectWithSelf(FormContextKey, undefined) : undefined;\r\n    function normalizeErrors(messages) {\r\n        if (!messages) {\r\n            return [];\r\n        }\r\n        return Array.isArray(messages) ? messages : [messages];\r\n    }\r\n    if (!form) {\r\n        const errors = ref([]);\r\n        return {\r\n            errors,\r\n            errorMessage: computed(() => errors.value[0]),\r\n            setErrors: (messages) => {\r\n                errors.value = normalizeErrors(messages);\r\n            },\r\n        };\r\n    }\r\n    const errors = computed(() => form.errorBag.value[unref(path)] || []);\r\n    return {\r\n        errors,\r\n        errorMessage: computed(() => errors.value[0]),\r\n        setErrors: (messages) => {\r\n            form.setFieldErrorBag(unref(path), normalizeErrors(messages));\r\n        },\r\n    };\r\n}\n\nfunction installDevtoolsPlugin(app) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        setupDevtoolsPlugin({\r\n            id: 'vee-validate-devtools-plugin',\r\n            label: 'VeeValidate Plugin',\r\n            packageName: 'vee-validate',\r\n            homepage: 'https://vee-validate.logaretm.com/v4',\r\n            app,\r\n            logo: 'https://vee-validate.logaretm.com/v4/logo.png',\r\n        }, setupApiHooks);\r\n    }\r\n}\r\nconst DEVTOOLS_FORMS = {};\r\nconst DEVTOOLS_FIELDS = {};\r\nlet API;\r\nconst refreshInspector = throttle(() => {\r\n    setTimeout(async () => {\r\n        await nextTick();\r\n        API === null || API === void 0 ? void 0 : API.sendInspectorState(INSPECTOR_ID);\r\n        API === null || API === void 0 ? void 0 : API.sendInspectorTree(INSPECTOR_ID);\r\n    }, 100);\r\n}, 100);\r\nfunction registerFormWithDevTools(form) {\r\n    const vm = getCurrentInstance();\r\n    if (!API) {\r\n        const app = vm === null || vm === void 0 ? void 0 : vm.appContext.app;\r\n        if (!app) {\r\n            return;\r\n        }\r\n        installDevtoolsPlugin(app);\r\n    }\r\n    DEVTOOLS_FORMS[form.formId] = Object.assign({}, form);\r\n    DEVTOOLS_FORMS[form.formId]._vm = vm;\r\n    onUnmounted(() => {\r\n        delete DEVTOOLS_FORMS[form.formId];\r\n        refreshInspector();\r\n    });\r\n    refreshInspector();\r\n}\r\nfunction registerSingleFieldWithDevtools(field) {\r\n    const vm = getCurrentInstance();\r\n    if (!API) {\r\n        const app = vm === null || vm === void 0 ? void 0 : vm.appContext.app;\r\n        if (!app) {\r\n            return;\r\n        }\r\n        installDevtoolsPlugin(app);\r\n    }\r\n    DEVTOOLS_FIELDS[field.id] = Object.assign({}, field);\r\n    DEVTOOLS_FIELDS[field.id]._vm = vm;\r\n    onUnmounted(() => {\r\n        delete DEVTOOLS_FIELDS[field.id];\r\n        refreshInspector();\r\n    });\r\n    refreshInspector();\r\n}\r\nconst INSPECTOR_ID = 'vee-validate-inspector';\r\nconst COLORS = {\r\n    error: 0xbd4b4b,\r\n    success: 0x06d77b,\r\n    unknown: 0x54436b,\r\n    white: 0xffffff,\r\n    black: 0x000000,\r\n    blue: 0x035397,\r\n    purple: 0xb980f0,\r\n    orange: 0xf5a962,\r\n    gray: 0xbbbfca,\r\n};\r\nlet SELECTED_NODE = null;\r\nfunction setupApiHooks(api) {\r\n    API = api;\r\n    api.addInspector({\r\n        id: INSPECTOR_ID,\r\n        icon: 'rule',\r\n        label: 'vee-validate',\r\n        noSelectionText: 'Select a vee-validate node to inspect',\r\n        actions: [\r\n            {\r\n                icon: 'done_outline',\r\n                tooltip: 'Validate selected item',\r\n                action: async () => {\r\n                    if (!SELECTED_NODE) {\r\n                        console.error('There is not a valid selected vee-validate node or component');\r\n                        return;\r\n                    }\r\n                    const result = await SELECTED_NODE.validate();\r\n                    console.log(result);\r\n                },\r\n            },\r\n            {\r\n                icon: 'delete_sweep',\r\n                tooltip: 'Clear validation state of the selected item',\r\n                action: () => {\r\n                    if (!SELECTED_NODE) {\r\n                        console.error('There is not a valid selected vee-validate node or component');\r\n                        return;\r\n                    }\r\n                    if ('id' in SELECTED_NODE) {\r\n                        SELECTED_NODE.resetField();\r\n                        return;\r\n                    }\r\n                    SELECTED_NODE.resetForm();\r\n                },\r\n            },\r\n        ],\r\n    });\r\n    api.on.getInspectorTree(payload => {\r\n        if (payload.inspectorId !== INSPECTOR_ID) {\r\n            return;\r\n        }\r\n        const forms = Object.values(DEVTOOLS_FORMS);\r\n        const fields = Object.values(DEVTOOLS_FIELDS);\r\n        payload.rootNodes = [\r\n            ...forms.map(mapFormForDevtoolsInspector),\r\n            ...fields.map(field => mapFieldForDevtoolsInspector(field)),\r\n        ];\r\n    });\r\n    api.on.getInspectorState((payload, ctx) => {\r\n        if (payload.inspectorId !== INSPECTOR_ID || ctx.currentTab !== `custom-inspector:${INSPECTOR_ID}`) {\r\n            return;\r\n        }\r\n        const { form, field, type } = decodeNodeId(payload.nodeId);\r\n        if (form && type === 'form') {\r\n            payload.state = buildFormState(form);\r\n            SELECTED_NODE = form;\r\n            return;\r\n        }\r\n        if (field && type === 'field') {\r\n            payload.state = buildFieldState(field);\r\n            SELECTED_NODE = field;\r\n            return;\r\n        }\r\n        SELECTED_NODE = null;\r\n    });\r\n}\r\nfunction mapFormForDevtoolsInspector(form) {\r\n    const { textColor, bgColor } = getTagTheme(form);\r\n    const formTreeNodes = {};\r\n    Object.values(form.fieldsByPath.value).forEach(field => {\r\n        const fieldInstance = Array.isArray(field) ? field[0] : field;\r\n        if (!fieldInstance) {\r\n            return;\r\n        }\r\n        setInPath(formTreeNodes, unref(fieldInstance.name), mapFieldForDevtoolsInspector(fieldInstance, form));\r\n    });\r\n    function buildFormTree(tree, path = []) {\r\n        const key = [...path].pop();\r\n        if ('id' in tree) {\r\n            return Object.assign(Object.assign({}, tree), { label: key || tree.label });\r\n        }\r\n        if (isObject(tree)) {\r\n            return {\r\n                id: `${path.join('.')}`,\r\n                label: key || '',\r\n                children: Object.keys(tree).map(key => buildFormTree(tree[key], [...path, key])),\r\n            };\r\n        }\r\n        if (Array.isArray(tree)) {\r\n            return {\r\n                id: `${path.join('.')}`,\r\n                label: `${key}[]`,\r\n                children: tree.map((c, idx) => buildFormTree(c, [...path, String(idx)])),\r\n            };\r\n        }\r\n        return { id: '', label: '', children: [] };\r\n    }\r\n    const { children } = buildFormTree(formTreeNodes);\r\n    return {\r\n        id: encodeNodeId(form),\r\n        label: 'Form',\r\n        children,\r\n        tags: [\r\n            {\r\n                label: 'Form',\r\n                textColor,\r\n                backgroundColor: bgColor,\r\n            },\r\n            {\r\n                label: `${Object.keys(form.fieldsByPath.value).length} fields`,\r\n                textColor: COLORS.white,\r\n                backgroundColor: COLORS.unknown,\r\n            },\r\n        ],\r\n    };\r\n}\r\nfunction mapFieldForDevtoolsInspector(field, form) {\r\n    const fieldInstance = normalizeField(field);\r\n    const { textColor, bgColor } = getTagTheme(fieldInstance);\r\n    const isGroup = Array.isArray(field) && field.length > 1;\r\n    return {\r\n        id: encodeNodeId(form, fieldInstance, !isGroup),\r\n        label: unref(fieldInstance.name),\r\n        children: Array.isArray(field) ? field.map(fieldItem => mapFieldForDevtoolsInspector(fieldItem, form)) : undefined,\r\n        tags: [\r\n            isGroup\r\n                ? undefined\r\n                : {\r\n                    label: 'Field',\r\n                    textColor,\r\n                    backgroundColor: bgColor,\r\n                },\r\n            !form\r\n                ? {\r\n                    label: 'Standalone',\r\n                    textColor: COLORS.black,\r\n                    backgroundColor: COLORS.gray,\r\n                }\r\n                : undefined,\r\n            !isGroup && fieldInstance.type === 'checkbox'\r\n                ? {\r\n                    label: 'Checkbox',\r\n                    textColor: COLORS.white,\r\n                    backgroundColor: COLORS.blue,\r\n                }\r\n                : undefined,\r\n            !isGroup && fieldInstance.type === 'radio'\r\n                ? {\r\n                    label: 'Radio',\r\n                    textColor: COLORS.white,\r\n                    backgroundColor: COLORS.purple,\r\n                }\r\n                : undefined,\r\n            isGroup\r\n                ? {\r\n                    label: 'Group',\r\n                    textColor: COLORS.black,\r\n                    backgroundColor: COLORS.orange,\r\n                }\r\n                : undefined,\r\n        ].filter(Boolean),\r\n    };\r\n}\r\nfunction encodeNodeId(form, field, encodeIndex = true) {\r\n    const fieldPath = form ? unref(field === null || field === void 0 ? void 0 : field.name) : field === null || field === void 0 ? void 0 : field.id;\r\n    const fieldGroup = fieldPath ? form === null || form === void 0 ? void 0 : form.fieldsByPath.value[fieldPath] : undefined;\r\n    let idx;\r\n    if (encodeIndex && field && Array.isArray(fieldGroup)) {\r\n        idx = fieldGroup.indexOf(field);\r\n    }\r\n    const idObject = { f: form === null || form === void 0 ? void 0 : form.formId, ff: fieldPath, idx, type: field ? 'field' : 'form' };\r\n    return btoa(JSON.stringify(idObject));\r\n}\r\nfunction decodeNodeId(nodeId) {\r\n    try {\r\n        const idObject = JSON.parse(atob(nodeId));\r\n        const form = DEVTOOLS_FORMS[idObject.f];\r\n        if (!form && idObject.ff) {\r\n            const field = DEVTOOLS_FIELDS[idObject.ff];\r\n            if (!field) {\r\n                return {};\r\n            }\r\n            return {\r\n                type: idObject.type,\r\n                field,\r\n            };\r\n        }\r\n        if (!form) {\r\n            return {};\r\n        }\r\n        const fieldGroup = form.fieldsByPath.value[idObject.ff];\r\n        return {\r\n            type: idObject.type,\r\n            form,\r\n            field: Array.isArray(fieldGroup) ? fieldGroup[idObject.idx || 0] : fieldGroup,\r\n        };\r\n    }\r\n    catch (err) {\r\n        // console.error(`Devtools: [vee-validate] Failed to parse node id ${nodeId}`);\r\n    }\r\n    return {};\r\n}\r\nfunction buildFieldState(field) {\r\n    const { errors, meta, value } = field;\r\n    return {\r\n        'Field state': [\r\n            { key: 'errors', value: errors.value },\r\n            {\r\n                key: 'initialValue',\r\n                value: meta.initialValue,\r\n            },\r\n            {\r\n                key: 'currentValue',\r\n                value: value.value,\r\n            },\r\n            {\r\n                key: 'touched',\r\n                value: meta.touched,\r\n            },\r\n            {\r\n                key: 'dirty',\r\n                value: meta.dirty,\r\n            },\r\n            {\r\n                key: 'valid',\r\n                value: meta.valid,\r\n            },\r\n        ],\r\n    };\r\n}\r\nfunction buildFormState(form) {\r\n    const { errorBag, meta, values, isSubmitting, submitCount } = form;\r\n    return {\r\n        'Form state': [\r\n            {\r\n                key: 'submitCount',\r\n                value: submitCount.value,\r\n            },\r\n            {\r\n                key: 'isSubmitting',\r\n                value: isSubmitting.value,\r\n            },\r\n            {\r\n                key: 'touched',\r\n                value: meta.value.touched,\r\n            },\r\n            {\r\n                key: 'dirty',\r\n                value: meta.value.dirty,\r\n            },\r\n            {\r\n                key: 'valid',\r\n                value: meta.value.valid,\r\n            },\r\n            {\r\n                key: 'initialValues',\r\n                value: meta.value.initialValues,\r\n            },\r\n            {\r\n                key: 'currentValues',\r\n                value: values,\r\n            },\r\n            {\r\n                key: 'errors',\r\n                value: keysOf(errorBag.value).reduce((acc, key) => {\r\n                    var _a;\r\n                    const message = (_a = errorBag.value[key]) === null || _a === void 0 ? void 0 : _a[0];\r\n                    if (message) {\r\n                        acc[key] = message;\r\n                    }\r\n                    return acc;\r\n                }, {}),\r\n            },\r\n        ],\r\n    };\r\n}\r\n/**\r\n * Resolves the tag color based on the form state\r\n */\r\nfunction getTagTheme(fieldOrForm) {\r\n    // const fallbackColors = {\r\n    //   bgColor: COLORS.unknown,\r\n    //   textColor: COLORS.white,\r\n    // };\r\n    const isValid = 'id' in fieldOrForm ? fieldOrForm.meta.valid : fieldOrForm.meta.value.valid;\r\n    return {\r\n        bgColor: isValid ? COLORS.success : COLORS.error,\r\n        textColor: isValid ? COLORS.black : COLORS.white,\r\n    };\r\n}\n\n/**\r\n * Creates a field composite.\r\n */\r\nfunction useField(name, rules, opts) {\r\n    if (hasCheckedAttr(opts === null || opts === void 0 ? void 0 : opts.type)) {\r\n        return useCheckboxField(name, rules, opts);\r\n    }\r\n    return _useField(name, rules, opts);\r\n}\r\nfunction _useField(name, rules, opts) {\r\n    const { initialValue: modelValue, validateOnMount, bails, type, checkedValue, label, validateOnValueUpdate, uncheckedValue, standalone, } = normalizeOptions(unref(name), opts);\r\n    const form = !standalone ? injectWithSelf(FormContextKey) : undefined;\r\n    const { id, value, initialValue, meta, setState, errors, errorMessage } = useFieldState(name, {\r\n        modelValue,\r\n        standalone,\r\n    });\r\n    /**\r\n     * Handles common onBlur meta update\r\n     */\r\n    const handleBlur = () => {\r\n        meta.touched = true;\r\n    };\r\n    const normalizedRules = computed(() => {\r\n        let rulesValue = unref(rules);\r\n        const schema = unref(form === null || form === void 0 ? void 0 : form.schema);\r\n        if (schema && !isYupValidator(schema)) {\r\n            rulesValue = extractRuleFromSchema(schema, unref(name)) || rulesValue;\r\n        }\r\n        if (isYupValidator(rulesValue) || isCallable(rulesValue)) {\r\n            return rulesValue;\r\n        }\r\n        return normalizeRules(rulesValue);\r\n    });\r\n    async function validateCurrentValue(mode) {\r\n        var _a, _b;\r\n        if (form === null || form === void 0 ? void 0 : form.validateSchema) {\r\n            return (_a = (await form.validateSchema(mode)).results[unref(name)]) !== null && _a !== void 0 ? _a : { valid: true, errors: [] };\r\n        }\r\n        return validate(value.value, normalizedRules.value, {\r\n            name: unref(label) || unref(name),\r\n            values: (_b = form === null || form === void 0 ? void 0 : form.values) !== null && _b !== void 0 ? _b : {},\r\n            bails,\r\n        });\r\n    }\r\n    async function validateWithStateMutation() {\r\n        meta.pending = true;\r\n        meta.validated = true;\r\n        const result = await validateCurrentValue('validated-only');\r\n        setState({ errors: result.errors });\r\n        meta.pending = false;\r\n        return result;\r\n    }\r\n    async function validateValidStateOnly() {\r\n        const result = await validateCurrentValue('silent');\r\n        meta.valid = result.valid;\r\n        return result;\r\n    }\r\n    function validate$1(opts) {\r\n        if (!(opts === null || opts === void 0 ? void 0 : opts.mode) || (opts === null || opts === void 0 ? void 0 : opts.mode) === 'force') {\r\n            return validateWithStateMutation();\r\n        }\r\n        if ((opts === null || opts === void 0 ? void 0 : opts.mode) === 'validated-only') {\r\n            return validateWithStateMutation();\r\n        }\r\n        return validateValidStateOnly();\r\n    }\r\n    // Common input/change event handler\r\n    const handleChange = (e, shouldValidate = true) => {\r\n        const newValue = normalizeEventValue(e);\r\n        value.value = newValue;\r\n        if (!validateOnValueUpdate && shouldValidate) {\r\n            validateWithStateMutation();\r\n        }\r\n    };\r\n    // Runs the initial validation\r\n    onMounted(() => {\r\n        if (validateOnMount) {\r\n            return validateWithStateMutation();\r\n        }\r\n        // validate self initially if no form was handling this\r\n        // forms should have their own initial silent validation run to make things more efficient\r\n        if (!form || !form.validateSchema) {\r\n            validateValidStateOnly();\r\n        }\r\n    });\r\n    function setTouched(isTouched) {\r\n        meta.touched = isTouched;\r\n    }\r\n    let unwatchValue;\r\n    function watchValue() {\r\n        unwatchValue = watch(value, validateOnValueUpdate ? validateWithStateMutation : validateValidStateOnly, {\r\n            deep: true,\r\n        });\r\n    }\r\n    watchValue();\r\n    function resetField(state) {\r\n        var _a;\r\n        unwatchValue === null || unwatchValue === void 0 ? void 0 : unwatchValue();\r\n        const newValue = state && 'value' in state ? state.value : initialValue.value;\r\n        setState({\r\n            value: klona(newValue),\r\n            initialValue: klona(newValue),\r\n            touched: (_a = state === null || state === void 0 ? void 0 : state.touched) !== null && _a !== void 0 ? _a : false,\r\n            errors: (state === null || state === void 0 ? void 0 : state.errors) || [],\r\n        });\r\n        meta.pending = false;\r\n        meta.validated = false;\r\n        validateValidStateOnly();\r\n        // need to watch at next tick to avoid triggering the value watcher\r\n        nextTick(() => {\r\n            watchValue();\r\n        });\r\n    }\r\n    function setValue(newValue) {\r\n        value.value = newValue;\r\n    }\r\n    function setErrors(errors) {\r\n        setState({ errors: Array.isArray(errors) ? errors : [errors] });\r\n    }\r\n    const field = {\r\n        id,\r\n        name,\r\n        label,\r\n        value,\r\n        meta,\r\n        errors,\r\n        errorMessage,\r\n        type,\r\n        checkedValue,\r\n        uncheckedValue,\r\n        bails,\r\n        resetField,\r\n        handleReset: () => resetField(),\r\n        validate: validate$1,\r\n        handleChange,\r\n        handleBlur,\r\n        setState,\r\n        setTouched,\r\n        setErrors,\r\n        setValue,\r\n    };\r\n    provide(FieldContextKey, field);\r\n    if (isRef(rules) && typeof unref(rules) !== 'function') {\r\n        watch(rules, (value, oldValue) => {\r\n            if (es6(value, oldValue)) {\r\n                return;\r\n            }\r\n            meta.validated ? validateWithStateMutation() : validateValidStateOnly();\r\n        }, {\r\n            deep: true,\r\n        });\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        field._vm = getCurrentInstance();\r\n        watch(() => (Object.assign(Object.assign({ errors: errors.value }, meta), { value: value.value })), refreshInspector, {\r\n            deep: true,\r\n        });\r\n        if (!form) {\r\n            registerSingleFieldWithDevtools(field);\r\n        }\r\n    }\r\n    // if no associated form return the field API immediately\r\n    if (!form) {\r\n        return field;\r\n    }\r\n    // associate the field with the given form\r\n    form.register(field);\r\n    onBeforeUnmount(() => {\r\n        form.unregister(field);\r\n    });\r\n    // extract cross-field dependencies in a computed prop\r\n    const dependencies = computed(() => {\r\n        const rulesVal = normalizedRules.value;\r\n        // is falsy, a function schema or a yup schema\r\n        if (!rulesVal || isCallable(rulesVal) || isYupValidator(rulesVal)) {\r\n            return {};\r\n        }\r\n        return Object.keys(rulesVal).reduce((acc, rule) => {\r\n            const deps = extractLocators(rulesVal[rule])\r\n                .map((dep) => dep.__locatorRef)\r\n                .reduce((depAcc, depName) => {\r\n                const depValue = getFromPath(form.values, depName) || form.values[depName];\r\n                if (depValue !== undefined) {\r\n                    depAcc[depName] = depValue;\r\n                }\r\n                return depAcc;\r\n            }, {});\r\n            Object.assign(acc, deps);\r\n            return acc;\r\n        }, {});\r\n    });\r\n    // Adds a watcher that runs the validation whenever field dependencies change\r\n    watch(dependencies, (deps, oldDeps) => {\r\n        // Skip if no dependencies or if the field wasn't manipulated\r\n        if (!Object.keys(deps).length) {\r\n            return;\r\n        }\r\n        const shouldValidate = !es6(deps, oldDeps);\r\n        if (shouldValidate) {\r\n            meta.validated ? validateWithStateMutation() : validateValidStateOnly();\r\n        }\r\n    });\r\n    return field;\r\n}\r\n/**\r\n * Normalizes partial field options to include the full options\r\n */\r\nfunction normalizeOptions(name, opts) {\r\n    const defaults = () => ({\r\n        initialValue: undefined,\r\n        validateOnMount: false,\r\n        bails: true,\r\n        rules: '',\r\n        label: name,\r\n        validateOnValueUpdate: true,\r\n        standalone: false,\r\n    });\r\n    if (!opts) {\r\n        return defaults();\r\n    }\r\n    // TODO: Deprecate this in next major release\r\n    const checkedValue = 'valueProp' in opts ? opts.valueProp : opts.checkedValue;\r\n    return Object.assign(Object.assign(Object.assign({}, defaults()), (opts || {})), { checkedValue });\r\n}\r\n/**\r\n * Extracts the validation rules from a schema\r\n */\r\nfunction extractRuleFromSchema(schema, fieldName) {\r\n    // no schema at all\r\n    if (!schema) {\r\n        return undefined;\r\n    }\r\n    // there is a key on the schema object for this field\r\n    return schema[fieldName];\r\n}\r\nfunction useCheckboxField(name, rules, opts) {\r\n    const form = !(opts === null || opts === void 0 ? void 0 : opts.standalone) ? injectWithSelf(FormContextKey) : undefined;\r\n    const checkedValue = opts === null || opts === void 0 ? void 0 : opts.checkedValue;\r\n    const uncheckedValue = opts === null || opts === void 0 ? void 0 : opts.uncheckedValue;\r\n    function patchCheckboxApi(field) {\r\n        const handleChange = field.handleChange;\r\n        const checked = computed(() => {\r\n            const currentValue = unref(field.value);\r\n            const checkedVal = unref(checkedValue);\r\n            return Array.isArray(currentValue) ? currentValue.includes(checkedVal) : checkedVal === currentValue;\r\n        });\r\n        function handleCheckboxChange(e, shouldValidate = true) {\r\n            var _a, _b;\r\n            if (checked.value === ((_b = (_a = e) === null || _a === void 0 ? void 0 : _a.target) === null || _b === void 0 ? void 0 : _b.checked)) {\r\n                return;\r\n            }\r\n            let newValue = normalizeEventValue(e);\r\n            // Single checkbox field without a form to toggle it's value\r\n            if (!form) {\r\n                newValue = resolveNextCheckboxValue(unref(field.value), unref(checkedValue), unref(uncheckedValue));\r\n            }\r\n            handleChange(newValue, shouldValidate);\r\n        }\r\n        onBeforeUnmount(() => {\r\n            // toggles the checkbox value if it was checked\r\n            if (checked.value) {\r\n                handleCheckboxChange(unref(checkedValue), false);\r\n            }\r\n        });\r\n        return Object.assign(Object.assign({}, field), { checked,\r\n            checkedValue,\r\n            uncheckedValue, handleChange: handleCheckboxChange });\r\n    }\r\n    return patchCheckboxApi(_useField(name, rules, opts));\r\n}\n\nconst FieldImpl = defineComponent({\r\n    name: 'Field',\r\n    inheritAttrs: false,\r\n    props: {\r\n        as: {\r\n            type: [String, Object],\r\n            default: undefined,\r\n        },\r\n        name: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        rules: {\r\n            type: [Object, String, Function],\r\n            default: undefined,\r\n        },\r\n        validateOnMount: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        validateOnBlur: {\r\n            type: Boolean,\r\n            default: undefined,\r\n        },\r\n        validateOnChange: {\r\n            type: Boolean,\r\n            default: undefined,\r\n        },\r\n        validateOnInput: {\r\n            type: Boolean,\r\n            default: undefined,\r\n        },\r\n        validateOnModelUpdate: {\r\n            type: Boolean,\r\n            default: undefined,\r\n        },\r\n        bails: {\r\n            type: Boolean,\r\n            default: () => getConfig().bails,\r\n        },\r\n        label: {\r\n            type: String,\r\n            default: undefined,\r\n        },\r\n        uncheckedValue: {\r\n            type: null,\r\n            default: undefined,\r\n        },\r\n        modelValue: {\r\n            type: null,\r\n            default: IS_ABSENT,\r\n        },\r\n        modelModifiers: {\r\n            type: null,\r\n            default: () => ({}),\r\n        },\r\n        'onUpdate:modelValue': {\r\n            type: null,\r\n            default: undefined,\r\n        },\r\n        standalone: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n    },\r\n    setup(props, ctx) {\r\n        const rules = toRef(props, 'rules');\r\n        const name = toRef(props, 'name');\r\n        const label = toRef(props, 'label');\r\n        const uncheckedValue = toRef(props, 'uncheckedValue');\r\n        const hasModelEvents = isPropPresent(props, 'onUpdate:modelValue');\r\n        const { errors, value, errorMessage, validate: validateField, handleChange, handleBlur, setTouched, resetField, handleReset, meta, checked, setErrors, } = useField(name, rules, {\r\n            validateOnMount: props.validateOnMount,\r\n            bails: props.bails,\r\n            standalone: props.standalone,\r\n            type: ctx.attrs.type,\r\n            initialValue: resolveInitialValue(props, ctx),\r\n            // Only for checkboxes and radio buttons\r\n            checkedValue: ctx.attrs.value,\r\n            uncheckedValue,\r\n            label,\r\n            validateOnValueUpdate: false,\r\n        });\r\n        // If there is a v-model applied on the component we need to emit the `update:modelValue` whenever the value binding changes\r\n        const onChangeHandler = hasModelEvents\r\n            ? function handleChangeWithModel(e, shouldValidate = true) {\r\n                handleChange(e, shouldValidate);\r\n                ctx.emit('update:modelValue', value.value);\r\n            }\r\n            : handleChange;\r\n        const handleInput = (e) => {\r\n            if (!hasCheckedAttr(ctx.attrs.type)) {\r\n                value.value = normalizeEventValue(e);\r\n            }\r\n        };\r\n        const onInputHandler = hasModelEvents\r\n            ? function handleInputWithModel(e) {\r\n                handleInput(e);\r\n                ctx.emit('update:modelValue', value.value);\r\n            }\r\n            : handleInput;\r\n        const fieldProps = computed(() => {\r\n            const { validateOnInput, validateOnChange, validateOnBlur, validateOnModelUpdate } = resolveValidationTriggers(props);\r\n            const baseOnBlur = [handleBlur, ctx.attrs.onBlur, validateOnBlur ? validateField : undefined].filter(Boolean);\r\n            const baseOnInput = [(e) => onChangeHandler(e, validateOnInput), ctx.attrs.onInput].filter(Boolean);\r\n            const baseOnChange = [(e) => onChangeHandler(e, validateOnChange), ctx.attrs.onChange].filter(Boolean);\r\n            const attrs = {\r\n                name: props.name,\r\n                onBlur: baseOnBlur,\r\n                onInput: baseOnInput,\r\n                onChange: baseOnChange,\r\n            };\r\n            if (validateOnModelUpdate) {\r\n                attrs['onUpdate:modelValue'] = [onChangeHandler];\r\n            }\r\n            if (hasCheckedAttr(ctx.attrs.type) && checked) {\r\n                attrs.checked = checked.value;\r\n            }\r\n            else {\r\n                attrs.value = value.value;\r\n            }\r\n            const tag = resolveTag(props, ctx);\r\n            if (shouldHaveValueBinding(tag, ctx.attrs)) {\r\n                delete attrs.value;\r\n            }\r\n            return attrs;\r\n        });\r\n        const modelValue = toRef(props, 'modelValue');\r\n        watch(modelValue, newModelValue => {\r\n            // Don't attempt to sync absent values\r\n            if (newModelValue === IS_ABSENT && value.value === undefined) {\r\n                return;\r\n            }\r\n            if (newModelValue !== applyModifiers(value.value, props.modelModifiers)) {\r\n                value.value = newModelValue === IS_ABSENT ? undefined : newModelValue;\r\n                validateField();\r\n            }\r\n        });\r\n        function slotProps() {\r\n            return {\r\n                field: fieldProps.value,\r\n                value: value.value,\r\n                meta,\r\n                errors: errors.value,\r\n                errorMessage: errorMessage.value,\r\n                validate: validateField,\r\n                resetField,\r\n                handleChange: onChangeHandler,\r\n                handleInput: onInputHandler,\r\n                handleReset,\r\n                handleBlur,\r\n                setTouched,\r\n                setErrors,\r\n            };\r\n        }\r\n        ctx.expose({\r\n            setErrors,\r\n            setTouched,\r\n            reset: resetField,\r\n            validate: validateField,\r\n            handleChange,\r\n        });\r\n        return () => {\r\n            const tag = resolveDynamicComponent(resolveTag(props, ctx));\r\n            const children = normalizeChildren(tag, ctx, slotProps);\r\n            if (tag) {\r\n                return h(tag, Object.assign(Object.assign({}, ctx.attrs), fieldProps.value), children);\r\n            }\r\n            return children;\r\n        };\r\n    },\r\n});\r\nfunction resolveTag(props, ctx) {\r\n    let tag = props.as || '';\r\n    if (!props.as && !ctx.slots.default) {\r\n        tag = 'input';\r\n    }\r\n    return tag;\r\n}\r\nfunction resolveValidationTriggers(props) {\r\n    var _a, _b, _c, _d;\r\n    const { validateOnInput, validateOnChange, validateOnBlur, validateOnModelUpdate } = getConfig();\r\n    return {\r\n        validateOnInput: (_a = props.validateOnInput) !== null && _a !== void 0 ? _a : validateOnInput,\r\n        validateOnChange: (_b = props.validateOnChange) !== null && _b !== void 0 ? _b : validateOnChange,\r\n        validateOnBlur: (_c = props.validateOnBlur) !== null && _c !== void 0 ? _c : validateOnBlur,\r\n        validateOnModelUpdate: (_d = props.validateOnModelUpdate) !== null && _d !== void 0 ? _d : validateOnModelUpdate,\r\n    };\r\n}\r\nfunction applyModifiers(value, modifiers) {\r\n    if (modifiers.number) {\r\n        return toNumber(value);\r\n    }\r\n    return value;\r\n}\r\nfunction resolveInitialValue(props, ctx) {\r\n    // Gets the initial value either from `value` prop/attr or `v-model` binding (modelValue)\r\n    // For checkboxes and radio buttons it will always be the model value not the `value` attribute\r\n    if (!hasCheckedAttr(ctx.attrs.type)) {\r\n        return isPropPresent(props, 'modelValue') ? props.modelValue : ctx.attrs.value;\r\n    }\r\n    return isPropPresent(props, 'modelValue') ? props.modelValue : undefined;\r\n}\r\nconst Field = FieldImpl;\n\nlet FORM_COUNTER = 0;\r\nfunction useForm(opts) {\r\n    const formId = FORM_COUNTER++;\r\n    // Prevents fields from double resetting their values, which causes checkboxes to toggle their initial value\r\n    // TODO: This won't be needed if we centralize all the state inside the `form` for form inputs\r\n    let RESET_LOCK = false;\r\n    // A lookup containing fields or field groups\r\n    const fieldsByPath = ref({});\r\n    // If the form is currently submitting\r\n    const isSubmitting = ref(false);\r\n    // The number of times the user tried to submit the form\r\n    const submitCount = ref(0);\r\n    // dictionary for field arrays to receive various signals like reset\r\n    const fieldArraysLookup = {};\r\n    // a private ref for all form values\r\n    const formValues = reactive(klona(unref(opts === null || opts === void 0 ? void 0 : opts.initialValues) || {}));\r\n    // the source of errors for the form fields\r\n    const { errorBag, setErrorBag, setFieldErrorBag } = useErrorBag(opts === null || opts === void 0 ? void 0 : opts.initialErrors);\r\n    // Gets the first error of each field\r\n    const errors = computed(() => {\r\n        return keysOf(errorBag.value).reduce((acc, key) => {\r\n            const bag = errorBag.value[key];\r\n            if (bag && bag.length) {\r\n                acc[key] = bag[0];\r\n            }\r\n            return acc;\r\n        }, {});\r\n    });\r\n    function getFirstFieldAtPath(path) {\r\n        const fieldOrGroup = fieldsByPath.value[path];\r\n        return Array.isArray(fieldOrGroup) ? fieldOrGroup[0] : fieldOrGroup;\r\n    }\r\n    function fieldExists(path) {\r\n        return !!fieldsByPath.value[path];\r\n    }\r\n    /**\r\n     * Holds a computed reference to all fields names and labels\r\n     */\r\n    const fieldNames = computed(() => {\r\n        return keysOf(fieldsByPath.value).reduce((names, path) => {\r\n            const field = getFirstFieldAtPath(path);\r\n            if (field) {\r\n                names[path] = unref(field.label || field.name) || '';\r\n            }\r\n            return names;\r\n        }, {});\r\n    });\r\n    const fieldBailsMap = computed(() => {\r\n        return keysOf(fieldsByPath.value).reduce((map, path) => {\r\n            var _a;\r\n            const field = getFirstFieldAtPath(path);\r\n            if (field) {\r\n                map[path] = (_a = field.bails) !== null && _a !== void 0 ? _a : true;\r\n            }\r\n            return map;\r\n        }, {});\r\n    });\r\n    // mutable non-reactive reference to initial errors\r\n    // we need this to process initial errors then unset them\r\n    const initialErrors = Object.assign({}, ((opts === null || opts === void 0 ? void 0 : opts.initialErrors) || {}));\r\n    // initial form values\r\n    const { initialValues, originalInitialValues, setInitialValues } = useFormInitialValues(fieldsByPath, formValues, opts === null || opts === void 0 ? void 0 : opts.initialValues);\r\n    // form meta aggregations\r\n    const meta = useFormMeta(fieldsByPath, formValues, initialValues, errors);\r\n    const schema = opts === null || opts === void 0 ? void 0 : opts.validationSchema;\r\n    const formCtx = {\r\n        formId,\r\n        fieldsByPath,\r\n        values: formValues,\r\n        errorBag,\r\n        errors,\r\n        schema,\r\n        submitCount,\r\n        meta,\r\n        isSubmitting,\r\n        fieldArraysLookup,\r\n        validateSchema: unref(schema) ? validateSchema : undefined,\r\n        validate,\r\n        register: registerField,\r\n        unregister: unregisterField,\r\n        setFieldErrorBag,\r\n        validateField,\r\n        setFieldValue,\r\n        setValues,\r\n        setErrors,\r\n        setFieldError,\r\n        setFieldTouched,\r\n        setTouched,\r\n        resetForm,\r\n        handleSubmit,\r\n        stageInitialValue,\r\n        unsetInitialValue,\r\n        setFieldInitialValue,\r\n    };\r\n    function isFieldGroup(fieldOrGroup) {\r\n        return Array.isArray(fieldOrGroup);\r\n    }\r\n    function applyFieldMutation(fieldOrGroup, mutation) {\r\n        if (Array.isArray(fieldOrGroup)) {\r\n            return fieldOrGroup.forEach(mutation);\r\n        }\r\n        return mutation(fieldOrGroup);\r\n    }\r\n    /**\r\n     * Manually sets an error message on a specific field\r\n     */\r\n    function setFieldError(field, message) {\r\n        setFieldErrorBag(field, message);\r\n    }\r\n    /**\r\n     * Sets errors for the fields specified in the object\r\n     */\r\n    function setErrors(fields) {\r\n        setErrorBag(fields);\r\n    }\r\n    /**\r\n     * Sets a single field value\r\n     */\r\n    function setFieldValue(field, value, { force } = { force: false }) {\r\n        var _a;\r\n        const fieldInstance = fieldsByPath.value[field];\r\n        const clonedValue = klona(value);\r\n        // field wasn't found, create a virtual field as a placeholder\r\n        if (!fieldInstance) {\r\n            setInPath(formValues, field, clonedValue);\r\n            return;\r\n        }\r\n        if (isFieldGroup(fieldInstance) && ((_a = fieldInstance[0]) === null || _a === void 0 ? void 0 : _a.type) === 'checkbox' && !Array.isArray(value)) {\r\n            // Multiple checkboxes, and only one of them got updated\r\n            const newValue = klona(resolveNextCheckboxValue(getFromPath(formValues, field) || [], value, undefined));\r\n            setInPath(formValues, field, newValue);\r\n            return;\r\n        }\r\n        let newValue = value;\r\n        // Single Checkbox: toggles the field value unless the field is being reset then force it\r\n        if (!isFieldGroup(fieldInstance) && fieldInstance.type === 'checkbox' && !force && !RESET_LOCK) {\r\n            newValue = klona(resolveNextCheckboxValue(getFromPath(formValues, field), value, unref(fieldInstance.uncheckedValue)));\r\n        }\r\n        setInPath(formValues, field, newValue);\r\n    }\r\n    /**\r\n     * Sets multiple fields values\r\n     */\r\n    function setValues(fields) {\r\n        // clean up old values\r\n        keysOf(formValues).forEach(key => {\r\n            delete formValues[key];\r\n        });\r\n        // set up new values\r\n        keysOf(fields).forEach(path => {\r\n            setFieldValue(path, fields[path]);\r\n        });\r\n        // regenerate the arrays when the form values change\r\n        Object.values(fieldArraysLookup).forEach(f => f && f.reset());\r\n    }\r\n    /**\r\n     * Sets the touched meta state on a field\r\n     */\r\n    function setFieldTouched(field, isTouched) {\r\n        const fieldInstance = fieldsByPath.value[field];\r\n        if (fieldInstance) {\r\n            applyFieldMutation(fieldInstance, f => f.setTouched(isTouched));\r\n        }\r\n    }\r\n    /**\r\n     * Sets the touched meta state on multiple fields\r\n     */\r\n    function setTouched(fields) {\r\n        keysOf(fields).forEach(field => {\r\n            setFieldTouched(field, !!fields[field]);\r\n        });\r\n    }\r\n    /**\r\n     * Resets all fields\r\n     */\r\n    function resetForm(state) {\r\n        RESET_LOCK = true;\r\n        // set initial values if provided\r\n        if (state === null || state === void 0 ? void 0 : state.values) {\r\n            setInitialValues(state.values);\r\n            setValues(state === null || state === void 0 ? void 0 : state.values);\r\n        }\r\n        else {\r\n            // clean up the initial values back to the original\r\n            setInitialValues(originalInitialValues.value);\r\n            // otherwise clean the current values\r\n            setValues(originalInitialValues.value);\r\n        }\r\n        Object.values(fieldsByPath.value).forEach(field => {\r\n            if (!field) {\r\n                return;\r\n            }\r\n            // avoid resetting the field values, because they should've been reset already.\r\n            applyFieldMutation(field, f => f.resetField());\r\n        });\r\n        if (state === null || state === void 0 ? void 0 : state.touched) {\r\n            setTouched(state.touched);\r\n        }\r\n        setErrors((state === null || state === void 0 ? void 0 : state.errors) || {});\r\n        submitCount.value = (state === null || state === void 0 ? void 0 : state.submitCount) || 0;\r\n        nextTick(() => {\r\n            RESET_LOCK = false;\r\n        });\r\n    }\r\n    function insertFieldAtPath(field, path) {\r\n        const rawField = markRaw(field);\r\n        const fieldPath = path;\r\n        // first field at that path\r\n        if (!fieldsByPath.value[fieldPath]) {\r\n            fieldsByPath.value[fieldPath] = rawField;\r\n            return;\r\n        }\r\n        const fieldAtPath = fieldsByPath.value[fieldPath];\r\n        if (fieldAtPath && !Array.isArray(fieldAtPath)) {\r\n            fieldsByPath.value[fieldPath] = [fieldAtPath];\r\n        }\r\n        // add the new array to that path\r\n        fieldsByPath.value[fieldPath] = [...fieldsByPath.value[fieldPath], rawField];\r\n    }\r\n    function removeFieldFromPath(field, path) {\r\n        const fieldPath = path;\r\n        const fieldAtPath = fieldsByPath.value[fieldPath];\r\n        if (!fieldAtPath) {\r\n            return;\r\n        }\r\n        // same field at path\r\n        if (!isFieldGroup(fieldAtPath) && field.id === fieldAtPath.id) {\r\n            delete fieldsByPath.value[fieldPath];\r\n            return;\r\n        }\r\n        if (isFieldGroup(fieldAtPath)) {\r\n            const idx = fieldAtPath.findIndex(f => f.id === field.id);\r\n            if (idx === -1) {\r\n                return;\r\n            }\r\n            fieldAtPath.splice(idx, 1);\r\n            if (fieldAtPath.length === 1) {\r\n                fieldsByPath.value[fieldPath] = fieldAtPath[0];\r\n                return;\r\n            }\r\n            if (!fieldAtPath.length) {\r\n                delete fieldsByPath.value[fieldPath];\r\n            }\r\n        }\r\n    }\r\n    function registerField(field) {\r\n        const fieldPath = unref(field.name);\r\n        insertFieldAtPath(field, fieldPath);\r\n        if (isRef(field.name)) {\r\n            // ensures when a field's name was already taken that it preserves its same value\r\n            // necessary for fields generated by loops\r\n            watch(field.name, async (newPath, oldPath) => {\r\n                // cache the value\r\n                await nextTick();\r\n                removeFieldFromPath(field, oldPath);\r\n                insertFieldAtPath(field, newPath);\r\n                // re-validate if either path had errors before\r\n                if (errors.value[oldPath] || errors.value[newPath]) {\r\n                    validateField(newPath);\r\n                }\r\n                // clean up the old path if no other field is sharing that name\r\n                // #3325\r\n                await nextTick();\r\n                if (!fieldExists(oldPath)) {\r\n                    unsetPath(formValues, oldPath);\r\n                }\r\n            });\r\n        }\r\n        // if field already had errors (initial errors) that's not user-set, validate it again to ensure state is correct\r\n        // the difference being that `initialErrors` will contain the error message while other errors (pre-validated schema) won't have them as initial errors\r\n        // #3342\r\n        const initialErrorMessage = unref(field.errorMessage);\r\n        if (initialErrorMessage && (initialErrors === null || initialErrors === void 0 ? void 0 : initialErrors[fieldPath]) !== initialErrorMessage) {\r\n            validateField(fieldPath);\r\n        }\r\n        // marks the initial error as \"consumed\" so it won't be matched later with same non-initial error\r\n        delete initialErrors[fieldPath];\r\n    }\r\n    function unregisterField(field) {\r\n        const fieldName = unref(field.name);\r\n        removeFieldFromPath(field, fieldName);\r\n        nextTick(() => {\r\n            // clears a field error on unmounted\r\n            // we wait till next tick to make sure if the field is completely removed and doesn't have any siblings like checkboxes\r\n            // #3384\r\n            if (!fieldExists(fieldName)) {\r\n                setFieldError(fieldName, undefined);\r\n                unsetPath(formValues, fieldName);\r\n            }\r\n        });\r\n    }\r\n    async function validate(opts) {\r\n        if (formCtx.validateSchema) {\r\n            return formCtx.validateSchema((opts === null || opts === void 0 ? void 0 : opts.mode) || 'force');\r\n        }\r\n        // No schema, each field is responsible to validate itself\r\n        const validations = await Promise.all(Object.values(fieldsByPath.value).map(field => {\r\n            const fieldInstance = Array.isArray(field) ? field[0] : field;\r\n            if (!fieldInstance) {\r\n                return Promise.resolve({ key: '', valid: true, errors: [] });\r\n            }\r\n            return fieldInstance.validate(opts).then((result) => {\r\n                return {\r\n                    key: unref(fieldInstance.name),\r\n                    valid: result.valid,\r\n                    errors: result.errors,\r\n                };\r\n            });\r\n        }));\r\n        const results = {};\r\n        const errors = {};\r\n        for (const validation of validations) {\r\n            results[validation.key] = {\r\n                valid: validation.valid,\r\n                errors: validation.errors,\r\n            };\r\n            if (validation.errors.length) {\r\n                errors[validation.key] = validation.errors[0];\r\n            }\r\n        }\r\n        return {\r\n            valid: validations.every(r => r.valid),\r\n            results,\r\n            errors,\r\n        };\r\n    }\r\n    async function validateField(field) {\r\n        const fieldInstance = fieldsByPath.value[field];\r\n        if (!fieldInstance) {\r\n            warn$1(`field with name ${field} was not found`);\r\n            return Promise.resolve({ errors: [], valid: true });\r\n        }\r\n        if (Array.isArray(fieldInstance)) {\r\n            return fieldInstance.map(f => f.validate())[0];\r\n        }\r\n        return fieldInstance.validate();\r\n    }\r\n    function handleSubmit(fn, onValidationError) {\r\n        return function submissionHandler(e) {\r\n            if (e instanceof Event) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n            // Touch all fields\r\n            setTouched(keysOf(fieldsByPath.value).reduce((acc, field) => {\r\n                acc[field] = true;\r\n                return acc;\r\n            }, {}));\r\n            isSubmitting.value = true;\r\n            submitCount.value++;\r\n            return validate()\r\n                .then(result => {\r\n                if (result.valid && typeof fn === 'function') {\r\n                    return fn(klona(formValues), {\r\n                        evt: e,\r\n                        setErrors,\r\n                        setFieldError,\r\n                        setTouched,\r\n                        setFieldTouched,\r\n                        setValues,\r\n                        setFieldValue,\r\n                        resetForm,\r\n                    });\r\n                }\r\n                if (!result.valid && typeof onValidationError === 'function') {\r\n                    onValidationError({\r\n                        values: klona(formValues),\r\n                        evt: e,\r\n                        errors: result.errors,\r\n                        results: result.results,\r\n                    });\r\n                }\r\n            })\r\n                .then(returnVal => {\r\n                isSubmitting.value = false;\r\n                return returnVal;\r\n            }, err => {\r\n                isSubmitting.value = false;\r\n                // re-throw the err so it doesn't go silent\r\n                throw err;\r\n            });\r\n        };\r\n    }\r\n    function setFieldInitialValue(path, value) {\r\n        setInPath(initialValues.value, path, klona(value));\r\n    }\r\n    function unsetInitialValue(path) {\r\n        unsetPath(initialValues.value, path);\r\n    }\r\n    /**\r\n     * Sneaky function to set initial field values\r\n     */\r\n    function stageInitialValue(path, value) {\r\n        setInPath(formValues, path, value);\r\n        setFieldInitialValue(path, value);\r\n    }\r\n    async function _validateSchema() {\r\n        const schemaValue = unref(schema);\r\n        if (!schemaValue) {\r\n            return { valid: true, results: {}, errors: {} };\r\n        }\r\n        const formResult = isYupValidator(schemaValue)\r\n            ? await validateYupSchema(schemaValue, formValues)\r\n            : await validateObjectSchema(schemaValue, formValues, {\r\n                names: fieldNames.value,\r\n                bailsMap: fieldBailsMap.value,\r\n            });\r\n        return formResult;\r\n    }\r\n    /**\r\n     * Batches validation runs in 5ms batches\r\n     */\r\n    const debouncedSchemaValidation = debounceAsync(_validateSchema, 5);\r\n    async function validateSchema(mode) {\r\n        const formResult = await debouncedSchemaValidation();\r\n        // fields by id lookup\r\n        const fieldsById = formCtx.fieldsByPath.value || {};\r\n        // errors fields names, we need it to also check if custom errors are updated\r\n        const currentErrorsPaths = keysOf(formCtx.errorBag.value);\r\n        // collect all the keys from the schema and all fields\r\n        // this ensures we have a complete keymap of all the fields\r\n        const paths = [\r\n            ...new Set([...keysOf(formResult.results), ...keysOf(fieldsById), ...currentErrorsPaths]),\r\n        ];\r\n        // aggregates the paths into a single result object while applying the results on the fields\r\n        return paths.reduce((validation, path) => {\r\n            const field = fieldsById[path];\r\n            const messages = (formResult.results[path] || { errors: [] }).errors;\r\n            const fieldResult = {\r\n                errors: messages,\r\n                valid: !messages.length,\r\n            };\r\n            validation.results[path] = fieldResult;\r\n            if (!fieldResult.valid) {\r\n                validation.errors[path] = fieldResult.errors[0];\r\n            }\r\n            // field not rendered\r\n            if (!field) {\r\n                setFieldError(path, messages);\r\n                return validation;\r\n            }\r\n            // always update the valid flag regardless of the mode\r\n            applyFieldMutation(field, f => (f.meta.valid = fieldResult.valid));\r\n            if (mode === 'silent') {\r\n                return validation;\r\n            }\r\n            const wasValidated = Array.isArray(field) ? field.some(f => f.meta.validated) : field.meta.validated;\r\n            if (mode === 'validated-only' && !wasValidated) {\r\n                return validation;\r\n            }\r\n            applyFieldMutation(field, f => f.setState({ errors: fieldResult.errors }));\r\n            return validation;\r\n        }, { valid: formResult.valid, results: {}, errors: {} });\r\n    }\r\n    const submitForm = handleSubmit((_, { evt }) => {\r\n        if (isFormSubmitEvent(evt)) {\r\n            evt.target.submit();\r\n        }\r\n    });\r\n    // Trigger initial validation\r\n    onMounted(() => {\r\n        if (opts === null || opts === void 0 ? void 0 : opts.initialErrors) {\r\n            setErrors(opts.initialErrors);\r\n        }\r\n        if (opts === null || opts === void 0 ? void 0 : opts.initialTouched) {\r\n            setTouched(opts.initialTouched);\r\n        }\r\n        // if validate on mount was enabled\r\n        if (opts === null || opts === void 0 ? void 0 : opts.validateOnMount) {\r\n            validate();\r\n            return;\r\n        }\r\n        // otherwise run initial silent validation through schema if available\r\n        // the useField should skip their own silent validation if a yup schema is present\r\n        if (formCtx.validateSchema) {\r\n            formCtx.validateSchema('silent');\r\n        }\r\n    });\r\n    if (isRef(schema)) {\r\n        watch(schema, () => {\r\n            var _a;\r\n            (_a = formCtx.validateSchema) === null || _a === void 0 ? void 0 : _a.call(formCtx, 'validated-only');\r\n        });\r\n    }\r\n    // Provide injections\r\n    provide(FormContextKey, formCtx);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        registerFormWithDevTools(formCtx);\r\n        watch(() => (Object.assign(Object.assign({ errors: errorBag.value }, meta.value), { values: formValues, isSubmitting: isSubmitting.value, submitCount: submitCount.value })), refreshInspector, {\r\n            deep: true,\r\n        });\r\n    }\r\n    return {\r\n        errors,\r\n        meta,\r\n        values: formValues,\r\n        isSubmitting,\r\n        submitCount,\r\n        validate,\r\n        validateField,\r\n        handleReset: () => resetForm(),\r\n        resetForm,\r\n        handleSubmit,\r\n        submitForm,\r\n        setFieldError,\r\n        setErrors,\r\n        setFieldValue,\r\n        setValues,\r\n        setFieldTouched,\r\n        setTouched,\r\n    };\r\n}\r\n/**\r\n * Manages form meta aggregation\r\n */\r\nfunction useFormMeta(fieldsByPath, currentValues, initialValues, errors) {\r\n    const MERGE_STRATEGIES = {\r\n        touched: 'some',\r\n        pending: 'some',\r\n        valid: 'every',\r\n    };\r\n    const isDirty = computed(() => {\r\n        return !es6(currentValues, unref(initialValues));\r\n    });\r\n    function calculateFlags() {\r\n        const fields = Object.values(fieldsByPath.value).flat(1).filter(Boolean);\r\n        return keysOf(MERGE_STRATEGIES).reduce((acc, flag) => {\r\n            const mergeMethod = MERGE_STRATEGIES[flag];\r\n            acc[flag] = fields[mergeMethod](field => field.meta[flag]);\r\n            return acc;\r\n        }, {});\r\n    }\r\n    const flags = reactive(calculateFlags());\r\n    watchEffect(() => {\r\n        const value = calculateFlags();\r\n        flags.touched = value.touched;\r\n        flags.valid = value.valid;\r\n        flags.pending = value.pending;\r\n    });\r\n    return computed(() => {\r\n        return Object.assign(Object.assign({ initialValues: unref(initialValues) }, flags), { valid: flags.valid && !keysOf(errors.value).length, dirty: isDirty.value });\r\n    });\r\n}\r\n/**\r\n * Manages the initial values prop\r\n */\r\nfunction useFormInitialValues(fields, formValues, providedValues) {\r\n    // these are the mutable initial values as the fields are mounted/unmounted\r\n    const initialValues = ref(klona(unref(providedValues)) || {});\r\n    // these are the original initial value as provided by the user initially, they don't keep track of conditional fields\r\n    // this is important because some conditional fields will overwrite the initial values for other fields who had the same name\r\n    // like array fields, any push/insert operation will overwrite the initial values because they \"create new fields\"\r\n    // so these are the values that the reset function should use\r\n    // these only change when the user explicitly chanegs the initial values or when the user resets them with new values.\r\n    const originalInitialValues = ref(klona(unref(providedValues)) || {});\r\n    function setInitialValues(values, updateFields = false) {\r\n        initialValues.value = klona(values);\r\n        originalInitialValues.value = klona(values);\r\n        if (!updateFields) {\r\n            return;\r\n        }\r\n        // update the pristine non-touched fields\r\n        // those are excluded because it's unlikely you want to change the form values using initial values\r\n        // we mostly watch them for API population or newly inserted fields\r\n        // if the user API is taking too much time before user interaction they should consider disabling or hiding their inputs until the values are ready\r\n        keysOf(fields.value).forEach(fieldPath => {\r\n            const field = fields.value[fieldPath];\r\n            const wasTouched = Array.isArray(field) ? field.some(f => f.meta.touched) : field === null || field === void 0 ? void 0 : field.meta.touched;\r\n            if (!field || wasTouched) {\r\n                return;\r\n            }\r\n            const newValue = getFromPath(initialValues.value, fieldPath);\r\n            setInPath(formValues, fieldPath, klona(newValue));\r\n        });\r\n    }\r\n    if (isRef(providedValues)) {\r\n        watch(providedValues, value => {\r\n            setInitialValues(value, true);\r\n        }, {\r\n            deep: true,\r\n        });\r\n    }\r\n    return {\r\n        initialValues,\r\n        originalInitialValues,\r\n        setInitialValues,\r\n    };\r\n}\r\nfunction useErrorBag(initialErrors) {\r\n    const errorBag = ref({});\r\n    function normalizeErrorItem(message) {\r\n        return Array.isArray(message) ? message : message ? [message] : [];\r\n    }\r\n    /**\r\n     * Manually sets an error message on a specific field\r\n     */\r\n    function setFieldErrorBag(field, message) {\r\n        if (!message) {\r\n            delete errorBag.value[field];\r\n            return;\r\n        }\r\n        errorBag.value[field] = normalizeErrorItem(message);\r\n    }\r\n    /**\r\n     * Sets errors for the fields specified in the object\r\n     */\r\n    function setErrorBag(fields) {\r\n        errorBag.value = keysOf(fields).reduce((acc, key) => {\r\n            const message = fields[key];\r\n            if (message) {\r\n                acc[key] = normalizeErrorItem(message);\r\n            }\r\n            return acc;\r\n        }, {});\r\n    }\r\n    if (initialErrors) {\r\n        setErrorBag(initialErrors);\r\n    }\r\n    return {\r\n        errorBag,\r\n        setErrorBag,\r\n        setFieldErrorBag,\r\n    };\r\n}\n\nconst FormImpl = defineComponent({\r\n    name: 'Form',\r\n    inheritAttrs: false,\r\n    props: {\r\n        as: {\r\n            type: String,\r\n            default: 'form',\r\n        },\r\n        validationSchema: {\r\n            type: Object,\r\n            default: undefined,\r\n        },\r\n        initialValues: {\r\n            type: Object,\r\n            default: undefined,\r\n        },\r\n        initialErrors: {\r\n            type: Object,\r\n            default: undefined,\r\n        },\r\n        initialTouched: {\r\n            type: Object,\r\n            default: undefined,\r\n        },\r\n        validateOnMount: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        onSubmit: {\r\n            type: Function,\r\n            default: undefined,\r\n        },\r\n        onInvalidSubmit: {\r\n            type: Function,\r\n            default: undefined,\r\n        },\r\n    },\r\n    setup(props, ctx) {\r\n        const initialValues = toRef(props, 'initialValues');\r\n        const validationSchema = toRef(props, 'validationSchema');\r\n        const { errors, values, meta, isSubmitting, submitCount, validate, validateField, handleReset, resetForm, handleSubmit, submitForm, setErrors, setFieldError, setFieldValue, setValues, setFieldTouched, setTouched, } = useForm({\r\n            validationSchema: validationSchema.value ? validationSchema : undefined,\r\n            initialValues,\r\n            initialErrors: props.initialErrors,\r\n            initialTouched: props.initialTouched,\r\n            validateOnMount: props.validateOnMount,\r\n        });\r\n        const onSubmit = props.onSubmit ? handleSubmit(props.onSubmit, props.onInvalidSubmit) : submitForm;\r\n        function handleFormReset(e) {\r\n            if (isEvent(e)) {\r\n                // Prevent default form reset behavior\r\n                e.preventDefault();\r\n            }\r\n            handleReset();\r\n            if (typeof ctx.attrs.onReset === 'function') {\r\n                ctx.attrs.onReset();\r\n            }\r\n        }\r\n        function handleScopedSlotSubmit(evt, onSubmit) {\r\n            const onSuccess = typeof evt === 'function' && !onSubmit ? evt : onSubmit;\r\n            return handleSubmit(onSuccess, props.onInvalidSubmit)(evt);\r\n        }\r\n        function slotProps() {\r\n            return {\r\n                meta: meta.value,\r\n                errors: errors.value,\r\n                values: values,\r\n                isSubmitting: isSubmitting.value,\r\n                submitCount: submitCount.value,\r\n                validate,\r\n                validateField,\r\n                handleSubmit: handleScopedSlotSubmit,\r\n                handleReset,\r\n                submitForm,\r\n                setErrors,\r\n                setFieldError,\r\n                setFieldValue,\r\n                setValues,\r\n                setFieldTouched,\r\n                setTouched,\r\n                resetForm,\r\n            };\r\n        }\r\n        // expose these functions and methods as part of public API\r\n        ctx.expose({\r\n            setFieldError,\r\n            setErrors,\r\n            setFieldValue,\r\n            setValues,\r\n            setFieldTouched,\r\n            setTouched,\r\n            resetForm,\r\n            validate,\r\n            validateField,\r\n        });\r\n        return function renderForm() {\r\n            // avoid resolving the form component as itself\r\n            const tag = props.as === 'form' ? props.as : resolveDynamicComponent(props.as);\r\n            const children = normalizeChildren(tag, ctx, slotProps);\r\n            if (!props.as) {\r\n                return children;\r\n            }\r\n            // Attributes to add on a native `form` tag\r\n            const formAttrs = props.as === 'form'\r\n                ? {\r\n                    // Disables native validation as vee-validate will handle it.\r\n                    novalidate: true,\r\n                }\r\n                : {};\r\n            return h(tag, Object.assign(Object.assign(Object.assign({}, formAttrs), ctx.attrs), { onSubmit, onReset: handleFormReset }), children);\r\n        };\r\n    },\r\n});\r\nconst Form = FormImpl;\n\nlet FIELD_ARRAY_COUNTER = 0;\r\nfunction useFieldArray(arrayPath) {\r\n    const id = FIELD_ARRAY_COUNTER++;\r\n    const form = injectWithSelf(FormContextKey, undefined);\r\n    const fields = ref([]);\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    const noOp = () => { };\r\n    const noOpApi = {\r\n        fields: readonly(fields),\r\n        remove: noOp,\r\n        push: noOp,\r\n        swap: noOp,\r\n        insert: noOp,\r\n        update: noOp,\r\n        replace: noOp,\r\n        prepend: noOp,\r\n    };\r\n    if (!form) {\r\n        warn('FieldArray requires being a child of `<Form/>` or `useForm` being called before it. Array fields may not work correctly');\r\n        return noOpApi;\r\n    }\r\n    if (!unref(arrayPath)) {\r\n        warn('FieldArray requires a field path to be provided, did you forget to pass the `name` prop?');\r\n        return noOpApi;\r\n    }\r\n    let entryCounter = 0;\r\n    function initFields() {\r\n        const currentValues = getFromPath(form === null || form === void 0 ? void 0 : form.values, unref(arrayPath), []);\r\n        fields.value = currentValues.map(createEntry);\r\n        updateEntryFlags();\r\n    }\r\n    initFields();\r\n    function updateEntryFlags() {\r\n        const fieldsLength = fields.value.length;\r\n        for (let i = 0; i < fieldsLength; i++) {\r\n            const entry = fields.value[i];\r\n            entry.isFirst = i === 0;\r\n            entry.isLast = i === fieldsLength - 1;\r\n        }\r\n    }\r\n    function createEntry(value) {\r\n        const key = entryCounter++;\r\n        const entry = {\r\n            key,\r\n            value: computed(() => {\r\n                const currentValues = getFromPath(form === null || form === void 0 ? void 0 : form.values, unref(arrayPath), []);\r\n                const idx = fields.value.findIndex(e => e.key === key);\r\n                return idx === -1 ? value : currentValues[idx];\r\n            }),\r\n            isFirst: false,\r\n            isLast: false,\r\n        };\r\n        return entry;\r\n    }\r\n    function remove(idx) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        if (!pathValue || !Array.isArray(pathValue)) {\r\n            return;\r\n        }\r\n        const newValue = [...pathValue];\r\n        newValue.splice(idx, 1);\r\n        form === null || form === void 0 ? void 0 : form.unsetInitialValue(pathName + `[${idx}]`);\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\r\n        fields.value.splice(idx, 1);\r\n        updateEntryFlags();\r\n    }\r\n    function push(value) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        const normalizedPathValue = isNullOrUndefined(pathValue) ? [] : pathValue;\r\n        if (!Array.isArray(normalizedPathValue)) {\r\n            return;\r\n        }\r\n        const newValue = [...normalizedPathValue];\r\n        newValue.push(value);\r\n        form === null || form === void 0 ? void 0 : form.stageInitialValue(pathName + `[${newValue.length - 1}]`, value);\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\r\n        fields.value.push(createEntry(value));\r\n        updateEntryFlags();\r\n    }\r\n    function swap(indexA, indexB) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        if (!Array.isArray(pathValue) || !pathValue[indexA] || !pathValue[indexB]) {\r\n            return;\r\n        }\r\n        const newValue = [...pathValue];\r\n        const newFields = [...fields.value];\r\n        // the old switcheroo\r\n        const temp = newValue[indexA];\r\n        newValue[indexA] = newValue[indexB];\r\n        newValue[indexB] = temp;\r\n        const tempEntry = newFields[indexA];\r\n        newFields[indexA] = newFields[indexB];\r\n        newFields[indexB] = tempEntry;\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\r\n        fields.value = newFields;\r\n        updateEntryFlags();\r\n    }\r\n    function insert(idx, value) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        if (!Array.isArray(pathValue) || pathValue.length < idx) {\r\n            return;\r\n        }\r\n        const newValue = [...pathValue];\r\n        const newFields = [...fields.value];\r\n        newValue.splice(idx, 0, value);\r\n        newFields.splice(idx, 0, createEntry(value));\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\r\n        fields.value = newFields;\r\n        updateEntryFlags();\r\n    }\r\n    function replace(arr) {\r\n        const pathName = unref(arrayPath);\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, arr);\r\n        initFields();\r\n    }\r\n    function update(idx, value) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        if (!Array.isArray(pathValue) || pathValue.length - 1 < idx) {\r\n            return;\r\n        }\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(`${pathName}[${idx}]`, value);\r\n    }\r\n    function prepend(value) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        const normalizedPathValue = isNullOrUndefined(pathValue) ? [] : pathValue;\r\n        if (!Array.isArray(normalizedPathValue)) {\r\n            return;\r\n        }\r\n        const newValue = [value, ...normalizedPathValue];\r\n        form === null || form === void 0 ? void 0 : form.stageInitialValue(pathName + `[${newValue.length - 1}]`, value);\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\r\n        fields.value.unshift(createEntry(value));\r\n        updateEntryFlags();\r\n    }\r\n    form.fieldArraysLookup[id] = {\r\n        reset: initFields,\r\n    };\r\n    onBeforeUnmount(() => {\r\n        delete form.fieldArraysLookup[id];\r\n    });\r\n    return {\r\n        fields: readonly(fields),\r\n        remove,\r\n        push,\r\n        swap,\r\n        insert,\r\n        update,\r\n        replace,\r\n        prepend,\r\n    };\r\n}\n\nconst FieldArrayImpl = defineComponent({\r\n    name: 'FieldArray',\r\n    inheritAttrs: false,\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n    },\r\n    setup(props, ctx) {\r\n        const { push, remove, swap, insert, replace, update, prepend, fields } = useFieldArray(toRef(props, 'name'));\r\n        function slotProps() {\r\n            return {\r\n                fields: fields.value,\r\n                push,\r\n                remove,\r\n                swap,\r\n                insert,\r\n                update,\r\n                replace,\r\n                prepend,\r\n            };\r\n        }\r\n        ctx.expose({\r\n            push,\r\n            remove,\r\n            swap,\r\n            insert,\r\n            update,\r\n            replace,\r\n            prepend,\r\n        });\r\n        return () => {\r\n            const children = normalizeChildren(undefined, ctx, slotProps);\r\n            return children;\r\n        };\r\n    },\r\n});\r\nconst FieldArray = FieldArrayImpl;\n\nconst ErrorMessageImpl = defineComponent({\r\n    name: 'ErrorMessage',\r\n    props: {\r\n        as: {\r\n            type: String,\r\n            default: undefined,\r\n        },\r\n        name: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n    },\r\n    setup(props, ctx) {\r\n        const form = inject(FormContextKey, undefined);\r\n        const message = computed(() => {\r\n            return form === null || form === void 0 ? void 0 : form.errors.value[props.name];\r\n        });\r\n        function slotProps() {\r\n            return {\r\n                message: message.value,\r\n            };\r\n        }\r\n        return () => {\r\n            // Renders nothing if there are no messages\r\n            if (!message.value) {\r\n                return undefined;\r\n            }\r\n            const tag = (props.as ? resolveDynamicComponent(props.as) : props.as);\r\n            const children = normalizeChildren(tag, ctx, slotProps);\r\n            const attrs = Object.assign({ role: 'alert' }, ctx.attrs);\r\n            // If no tag was specified and there are children\r\n            // render the slot as is without wrapping it\r\n            if (!tag && (Array.isArray(children) || !children) && (children === null || children === void 0 ? void 0 : children.length)) {\r\n                return children;\r\n            }\r\n            // If no children in slot\r\n            // render whatever specified and fallback to a <span> with the message in it's contents\r\n            if ((Array.isArray(children) || !children) && !(children === null || children === void 0 ? void 0 : children.length)) {\r\n                return h(tag || 'span', attrs, message.value);\r\n            }\r\n            return h(tag, attrs, children);\r\n        };\r\n    },\r\n});\r\nconst ErrorMessage = ErrorMessageImpl;\n\nfunction useResetForm() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return function resetForm(state) {\r\n        if (!form) {\r\n            return;\r\n        }\r\n        return form.resetForm(state);\r\n    };\r\n}\n\n/**\r\n * If a field is dirty or not\r\n */\r\nfunction useIsFieldDirty(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    let field = path ? undefined : inject(FieldContextKey);\r\n    return computed(() => {\r\n        if (path) {\r\n            field = normalizeField(form === null || form === void 0 ? void 0 : form.fieldsByPath.value[unref(path)]);\r\n        }\r\n        if (!field) {\r\n            warn(`field with name ${unref(path)} was not found`);\r\n            return false;\r\n        }\r\n        return field.meta.dirty;\r\n    });\r\n}\n\n/**\r\n * If a field is touched or not\r\n */\r\nfunction useIsFieldTouched(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    let field = path ? undefined : inject(FieldContextKey);\r\n    return computed(() => {\r\n        if (path) {\r\n            field = normalizeField(form === null || form === void 0 ? void 0 : form.fieldsByPath.value[unref(path)]);\r\n        }\r\n        if (!field) {\r\n            warn(`field with name ${unref(path)} was not found`);\r\n            return false;\r\n        }\r\n        return field.meta.touched;\r\n    });\r\n}\n\n/**\r\n * If a field is validated and is valid\r\n */\r\nfunction useIsFieldValid(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    let field = path ? undefined : inject(FieldContextKey);\r\n    return computed(() => {\r\n        if (path) {\r\n            field = normalizeField(form === null || form === void 0 ? void 0 : form.fieldsByPath.value[unref(path)]);\r\n        }\r\n        if (!field) {\r\n            warn(`field with name ${unref(path)} was not found`);\r\n            return false;\r\n        }\r\n        return field.meta.valid;\r\n    });\r\n}\n\n/**\r\n * If the form is submitting or not\r\n */\r\nfunction useIsSubmitting() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        var _a;\r\n        return (_a = form === null || form === void 0 ? void 0 : form.isSubmitting.value) !== null && _a !== void 0 ? _a : false;\r\n    });\r\n}\n\n/**\r\n * Validates a single field\r\n */\r\nfunction useValidateField(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    let field = path ? undefined : inject(FieldContextKey);\r\n    return function validateField() {\r\n        if (path) {\r\n            field = normalizeField(form === null || form === void 0 ? void 0 : form.fieldsByPath.value[unref(path)]);\r\n        }\r\n        if (!field) {\r\n            warn(`field with name ${unref(path)} was not found`);\r\n            return Promise.resolve({\r\n                errors: [],\r\n                valid: true,\r\n            });\r\n        }\r\n        return field.validate();\r\n    };\r\n}\n\n/**\r\n * If the form is dirty or not\r\n */\r\nfunction useIsFormDirty() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        var _a;\r\n        return (_a = form === null || form === void 0 ? void 0 : form.meta.value.dirty) !== null && _a !== void 0 ? _a : false;\r\n    });\r\n}\n\n/**\r\n * If the form is touched or not\r\n */\r\nfunction useIsFormTouched() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        var _a;\r\n        return (_a = form === null || form === void 0 ? void 0 : form.meta.value.touched) !== null && _a !== void 0 ? _a : false;\r\n    });\r\n}\n\n/**\r\n * If the form has been validated and is valid\r\n */\r\nfunction useIsFormValid() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        var _a;\r\n        return (_a = form === null || form === void 0 ? void 0 : form.meta.value.valid) !== null && _a !== void 0 ? _a : false;\r\n    });\r\n}\n\n/**\r\n * Validate multiple fields\r\n */\r\nfunction useValidateForm() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return function validateField() {\r\n        if (!form) {\r\n            return Promise.resolve({ results: {}, errors: {}, valid: true });\r\n        }\r\n        return form.validate();\r\n    };\r\n}\n\n/**\r\n * The number of form's submission count\r\n */\r\nfunction useSubmitCount() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        var _a;\r\n        return (_a = form === null || form === void 0 ? void 0 : form.submitCount.value) !== null && _a !== void 0 ? _a : 0;\r\n    });\r\n}\n\n/**\r\n * Gives access to a field's current value\r\n */\r\nfunction useFieldValue(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    // We don't want to use self injected context as it doesn't make sense\r\n    const field = path ? undefined : inject(FieldContextKey);\r\n    return computed(() => {\r\n        if (path) {\r\n            return getFromPath(form === null || form === void 0 ? void 0 : form.values, unref(path));\r\n        }\r\n        return unref(field === null || field === void 0 ? void 0 : field.value);\r\n    });\r\n}\n\n/**\r\n * Gives access to a form's values\r\n */\r\nfunction useFormValues() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        return (form === null || form === void 0 ? void 0 : form.values) || {};\r\n    });\r\n}\n\n/**\r\n * Gives access to all form errors\r\n */\r\nfunction useFormErrors() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        return ((form === null || form === void 0 ? void 0 : form.errors.value) || {});\r\n    });\r\n}\n\n/**\r\n * Gives access to a single field error\r\n */\r\nfunction useFieldError(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    // We don't want to use self injected context as it doesn't make sense\r\n    const field = path ? undefined : inject(FieldContextKey);\r\n    return computed(() => {\r\n        if (path) {\r\n            return form === null || form === void 0 ? void 0 : form.errors.value[unref(path)];\r\n        }\r\n        return field === null || field === void 0 ? void 0 : field.errorMessage.value;\r\n    });\r\n}\n\nfunction useSubmitForm(cb) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    const onSubmit = form ? form.handleSubmit(cb) : undefined;\r\n    return function submitForm(e) {\r\n        if (!onSubmit) {\r\n            return;\r\n        }\r\n        return onSubmit(e);\r\n    };\r\n}\n\nexport { ErrorMessage, Field, FieldArray, FieldContextKey, Form, FormContextKey, configure, defineRule, useField, useFieldArray, useFieldError, useFieldValue, useForm, useFormErrors, useFormValues, useIsFieldDirty, useIsFieldTouched, useIsFieldValid, useIsFormDirty, useIsFormTouched, useIsFormValid, useIsSubmitting, useResetForm, useSubmitCount, useSubmitForm, useValidateField, useValidateForm, validate };\n","\r\n/**\r\n * 校验表单插件和验证规则\r\n * validation-schema :  配置校验规则 rules\r\n * v-slot：导出错误对象=>错误提示信息\r\n */\r\nexport default {\r\n  // 校验account\r\n  /**\r\n   *\r\n   * @param {*} value 表单输入的值（输入框的值）\r\n   * @returns 校验不通过：错误提示信息 | 校验通过该：true\r\n   */\r\n  account (value) {\r\n    if (!value) return '请输入用户名'\r\n    return true\r\n  },\r\n  password (value) {\r\n    if (!value) return '请输入密码'\r\n    if (!/^\\w{6,24}$/.test(value)) return '密码是6-24个字符'\r\n    return true\r\n  },\r\n  isAgree (value) {\r\n    if (!value) return '请勾选同意用户协议'\r\n    return true\r\n  }\r\n}\r\n","import { render } from \"./login-form.vue?vue&type=template&id=1c919df5&scoped=true\"\nimport script from \"./login-form.vue?vue&type=script&lang=js\"\nexport * from \"./login-form.vue?vue&type=script&lang=js\"\n\nimport \"./login-form.vue?vue&type=style&index=0&id=1c919df5&lang=less&scoped=true\"\n\nimport exportComponent from \"F:\\\\ithiema\\\\黑马学习\\\\就业班\\\\07rabbit_test\\\\rabbitv0.0.1\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1c919df5\"]])\n\nexport default __exports__","import { render } from \"./index.vue?vue&type=template&id=20411f40&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=20411f40&scoped=true&lang=less\"\n\nimport exportComponent from \"F:\\\\ithiema\\\\黑马学习\\\\就业班\\\\07rabbit_test\\\\rabbitv0.0.1\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-20411f40\"]])\n\nexport default __exports__"],"sourceRoot":""}